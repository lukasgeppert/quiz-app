var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccessTokenGuard.html",[0,0.472,1,2.287]],["body/injectables/AccessTokenGuard.html",[0,0.802,1,3.889,2,1.635,3,0.326,4,0.283,5,0.283,6,2.929,7,2.482,8,3.58,9,0.501,10,0.025,11,0.777,12,3.58,13,2.482,14,0.326,15,0.133,16,2.482,17,4.065,18,0.021,19,0.021]],["title/modules/AccessTokenModule.html",[20,1.089,21,2.082]],["body/modules/AccessTokenModule.html",[3,0.235,4,0.205,5,0.205,6,2.114,7,1.792,9,0.517,10,0.025,11,0.561,14,0.235,15,0.096,18,0.017,19,0.017,20,1.502,21,3.979,22,1.442,23,1.958,24,2.934,25,2.934,26,2.934,27,3.756,28,3.771,29,2.256,30,1.661,31,1.661,32,2.934,33,2.635,34,2.635,35,2.992,36,2.077,37,1.18,38,3.985,39,1.94,40,3.509,41,2.584,42,2.934,43,2.635,44,2.934,45,2.323,46,2.323,47,2.114,48,2.934,49,3.465,50,2.934,51,2.934,52,3.465]],["title/injectables/AccessTokenService.html",[0,0.472,27,1.911]],["body/injectables/AccessTokenService.html",[0,0.567,2,0.969,3,0.193,4,0.168,5,0.168,6,3.542,7,3.002,9,0.481,10,0.025,11,0.46,14,0.193,15,0.079,18,0.015,19,0.015,27,2.296,36,2.326,37,0.969,39,1.593,53,2.122,54,0.46,55,1.396,56,3.221,57,4.916,58,1.396,59,3.471,60,3.471,61,1.829,62,2.409,63,4.329,64,1.12,65,3.471,66,1.534,67,1.534,68,1.044,69,1.347,70,3.471,71,3.65,72,2.845,73,3.057,74,1.396,75,3.057,76,3.471,77,2.691,78,2.521,79,2.845,80,1.226,81,2.409,82,1.471,83,1.736,84,1.471,85,3.471,86,2.409,87,1.748,88,3.471,89,2.409,90,3.471,91,2.845,92,4.069,93,2.409,94,1.184,95,2.409,96,2.409,97,2.501,98,2.409,99,2.409,100,2.409]],["title/injectables/AccessTokenStrategy.html",[0,0.472,28,2.082]],["body/injectables/AccessTokenStrategy.html",[0,0.639,2,1.15,3,0.229,4,0.199,5,0.199,6,3.216,7,2.725,9,0.529,10,0.025,11,0.546,13,1.745,14,0.229,15,0.094,16,1.745,18,0.017,19,0.017,28,2.82,36,2.309,37,1.15,54,0.546,56,2.262,58,1.574,61,1.505,64,0.929,66,1.475,67,1.475,68,0.866,69,1.296,74,1.15,78,3.011,82,1.745,83,2.059,86,2.858,87,1.917,101,2.517,102,2.82,103,3.913,104,2.858,105,3.913,106,3.375,107,2.858,108,2.858,109,2.858,110,2.517,111,3.098,112,3.216,113,2.858,114,3.913,115,3.375,116,3.913,117,2.858,118,2.858,119,2.517,120,2.858,121,1.312]],["title/modules/AppModule.html",[20,1.089,122,2.287]],["body/modules/AppModule.html",[3,0.159,4,0.138,5,0.138,9,0.521,10,0.025,11,0.378,14,0.159,15,0.065,18,0.013,19,0.013,20,1.131,22,0.972,23,1.475,29,1.699,30,1.121,31,1.121,33,1.309,35,1.985,36,1.664,37,0.796,43,2.397,45,1.567,46,1.567,47,1.426,94,2.249,122,4.171,123,1.979,124,1.979,125,3.298,126,3.027,127,3.027,128,3.027,129,2.337,130,3.544,131,3.544,132,2.337,133,1.979,134,2.337,135,3.001,136,3.544,137,3.001,138,3.544,139,3.544,140,1.567,141,2.376,142,2.337,143,2.337,144,3.544,145,2.337,146,1.979,147,2.337,148,2.337,149,2.337,150,2.337,151,2.337,152,2.337,153,1.979,154,1.979,155,2.337,156,2.337,157,1.979,158,2.337,159,2.337,160,5.617,161,2.337,162,2.337,163,2.337,164,2.337,165,2.337,166,2.337,167,1.979,168,2.337,169,2.337,170,2.337,171,2.337,172,4.779,173,2.337,174,2.337,175,2.337,176,2.337,177,2.337,178,2.337,179,1.979,180,2.337,181,2.337,182,2.337,183,2.337,184,2.337,185,2.337,186,2.337,187,2.337,188,2.337,189,2.337,190,2.337,191,2.337,192,2.337,193,2.337,194,2.337,195,2.337,196,1.979,197,2.337,198,2.337,199,2.337,200,1.121,201,2.337,202,2.337,203,2.337,204,2.337,205,2.337,206,2.337,207,1.979,208,2.337,209,1.309,210,4.046,211,3.625,212,2.337,213,1.567,214,1.979,215,2.337,216,2.337,217,2.337,218,2.337]],["title/controllers/AuthController.html",[219,2.082,220,2.287]],["body/controllers/AuthController.html",[1,1.092,3,0.111,4,0.096,5,0.096,7,1.379,9,0.519,10,0.025,11,0.264,14,0.111,15,0.045,18,0.01,19,0.01,27,1.895,39,0.913,40,1.989,41,1.989,54,0.264,58,0.908,61,0.727,63,2.524,64,0.982,66,1.56,67,1.56,68,0.955,69,1.371,71,3.859,73,2.524,74,1.665,75,1.215,77,1.895,78,1.279,82,0.843,83,0.994,84,2.23,87,1.684,94,1.408,97,2.631,112,0.994,121,1.52,200,2.068,209,0.913,219,0.994,220,1.788,221,1.38,222,1.38,223,1.38,224,3.329,225,3.385,226,2.667,227,2.667,228,2.386,229,3.385,230,2.258,231,1.63,232,3.385,233,3.277,234,2.394,235,1.63,236,1.63,237,1.895,238,1.63,239,1.63,240,2.667,241,1.493,242,2.956,243,1.63,244,3.311,245,1.63,246,1.63,247,1.63,248,1.63,249,1.8,250,1.63,251,1.63,252,2.23,253,1.63,254,1.63,255,1.63,256,1.63,257,1.215,258,2.386,259,1.63,260,1.63,261,2.621,262,2.667,263,1.63,264,1.215,265,1.38,266,1.38,267,2.667,268,2.667,269,2.258,270,1.38,271,0.781,272,1.788,273,1.215,274,1.63,275,1.279,276,1.63,277,1.63,278,1.63,279,1.895,280,1.63,281,1.895,282,1.379,283,1.215,284,1.63,285,1.092,286,2.667,287,1.63,288,1.63,289,1.63,290,1.63,291,1.63,292,1.627,293,1.63,294,3.217,295,1.38,296,1.63,297,3.385,298,2.621,299,1.63,300,1.63,301,2.667,302,1.63,303,1.63,304,1.63,305,1.63,306,3.311,307,1.63,308,1.63,309,1.75,310,1.38,311,1.63,312,1.092,313,1.63,314,1.63,315,1.63,316,1.63,317,1.63,318,1.63,319,1.63,320,1.63,321,1.63,322,1.63,323,1.63,324,1.63,325,2.667,326,1.63,327,1.63,328,1.63,329,1.63,330,1.63]],["title/modules/AuthModule.html",[20,1.089,125,2.082]],["body/modules/AuthModule.html",[3,0.228,4,0.198,5,0.198,7,1.734,9,0.551,10,0.025,11,0.542,13,1.734,14,0.228,15,0.093,18,0.017,19,0.017,20,1.469,21,3.734,22,1.395,23,1.914,29,2.206,30,1.608,31,1.608,34,1.878,35,2.577,36,1.303,37,1.142,40,2.5,43,2.577,94,1.395,111,2.248,125,4.07,126,3.427,128,3.427,133,2.839,209,2.577,220,3.521,228,2.046,242,1.878,282,1.734,331,2.839,332,2.839,333,3.734,334,3.353,335,3.353,336,4.601,337,3.353,338,4.601,339,3.353,340,3.353,341,3.353,342,3.353]],["title/classes/CreateUserDto.html",[15,0.095,343,2.082]],["body/classes/CreateUserDto.html",[3,0.26,4,0.226,5,0.226,9,0.33,10,0.024,14,0.26,15,0.106,18,0.018,19,0.018,54,0.619,55,1.712,64,1.245,68,1.16,69,1.844,80,2.009,200,2.692,343,3.067,344,1.391,345,5.384,346,2.852,347,2.599,348,4.187,349,4.754,350,4.187,351,3.764,352,3.824,353,3.824,354,3.824,355,3.824,356,3.824,357,2.333,358,1.706,359,3.824]],["title/classes/CredentialLogin.html",[15,0.095,233,2.287]],["body/classes/CredentialLogin.html",[3,0.193,4,0.168,5,0.168,9,0.414,10,0.025,14,0.193,15,0.133,18,0.015,19,0.015,54,0.459,55,1.394,64,0.822,68,0.766,80,1.571,200,2.301,214,3.464,233,2.743,234,2.115,249,1.865,271,1.36,292,2.496,312,4.102,344,1.032,351,4.38,360,4.063,361,2.116,362,2.838,363,2.838,364,2.838,365,4.092,366,4.092,367,4.092,368,6.329,369,6.329,370,5.576,371,5.252,372,4.798,373,5.252,374,4.447,375,2.838,376,2.838,377,5.252,378,2.838,379,4.092,380,2.838,381,4.092,382,2.838,383,3.051,384,2.116,385,4.092,386,3.051,387,4.092,388,4.092,389,1.467,390,1.731,391,2.838,392,2.838,393,4.092,394,2.838]],["title/injectables/GoogleGaurd.html",[0,0.472,395,2.545]],["body/injectables/GoogleGaurd.html",[0,0.809,2,1.658,3,0.33,4,0.287,5,0.287,9,0.505,10,0.025,11,0.788,12,3.631,13,2.517,14,0.33,15,0.135,16,2.517,18,0.021,19,0.021,395,4.364,396,4.123,397,4.869]],["title/injectables/IsGte.html",[0,0.472,398,2.287]],["body/injectables/IsGte.html",[0,0.54,2,0.907,3,0.181,4,0.157,5,0.157,9,0.337,10,0.025,11,0.431,14,0.181,15,0.108,18,0.014,19,0.014,54,0.431,58,1.33,64,1.024,66,1.627,67,1.732,68,0.955,69,1.429,74,1.736,80,0.796,84,2.933,87,1.683,94,1.108,102,2.383,121,2.205,224,2.854,237,1.491,249,2.337,347,1.376,389,1.376,390,3.576,398,2.618,399,4.047,400,2.254,401,3.906,402,3.906,403,3.307,404,3.906,405,4.484,406,5.469,407,2.662,408,3.307,409,3.906,410,2.662,411,3.307,412,4.964,413,2.662,414,4.315,415,3.307,416,2.662,417,3.307,418,3.307,419,2.254,420,1.985,421,3.917,422,3.307,423,2.254,424,2.254,425,3.906,426,2.662,427,3.906,428,2.662,429,2.662,430,2.254]],["title/injectables/IsValidPos.html",[0,0.472,431,2.545]],["body/injectables/IsValidPos.html",[0,0.637,2,1.146,3,0.228,4,0.199,5,0.199,9,0.398,10,0.025,11,0.544,14,0.228,15,0.128,18,0.017,19,0.017,54,0.544,58,1.571,64,0.927,66,1.472,67,1.68,68,0.864,69,1.293,74,1.571,80,1.006,87,1.914,94,1.399,102,2.814,121,2.046,224,3.17,237,1.884,249,2.046,347,1.739,389,1.739,390,2.814,399,3.924,403,3.905,406,2.848,411,3.905,412,5.312,414,4.794,415,3.905,417,3.905,418,3.905,419,2.848,420,3.439,421,4.456,422,3.905,423,2.848,424,2.848,430,2.848,431,3.439,432,4.456,433,2.848,434,3.364,435,3.364,436,3.364,437,3.364,438,3.364,439,3.364]],["title/modules/MailModule.html",[20,1.089,126,1.911]],["body/modules/MailModule.html",[3,0.241,4,0.209,5,0.209,9,0.5,10,0.025,11,0.574,14,0.241,15,0.098,18,0.017,19,0.017,20,1.526,22,1.476,23,1.99,29,2.293,30,1.701,31,1.701,33,2.678,34,2.678,35,3.029,36,2.103,37,1.209,43,2.678,45,2.379,46,2.379,47,2.165,94,1.476,126,3.562,157,3.005,223,3.005,242,1.987,279,3.77,440,3.005,441,3.005,442,3.005,443,3.549,444,3.549,445,2.646,446,2.646,447,3.549,448,3.549,449,3.549,450,3.005,451,3.549,452,3.549,453,3.549,454,3.549,455,3.549,456,3.549,457,3.549,458,3.549,459,3.549]],["title/injectables/MailService.html",[0,0.472,279,1.911]],["body/injectables/MailService.html",[0,0.615,2,1.089,3,0.217,4,0.189,5,0.189,9,0.442,10,0.025,11,0.517,14,0.217,15,0.089,18,0.016,19,0.016,36,2.405,37,1.089,54,0.517,58,1.517,61,1.986,64,0.895,66,1.421,67,1.421,68,0.834,69,1.249,74,1.089,80,1.804,84,2.302,87,1.163,97,3.126,121,1.243,200,2.793,213,2.143,241,1.79,279,3.102,445,2.384,446,2.384,460,2.707,461,4.453,462,3.197,463,5.54,464,3.197,465,4.453,466,3.197,467,2.707,468,2.384,469,3.197,470,3.197,471,3.197,472,3.197,473,3.197,474,3.197,475,3.197,476,3.197,477,3.77,478,3.197,479,3.197,480,4.453,481,3.321,482,3.197,483,3.197,484,4.453,485,4.453,486,4.453,487,3.197,488,3.197,489,2.707,490,3.197,491,3.197,492,2.707,493,2.384,494,2.707,495,3.197,496,3.197,497,2.707]],["title/classes/ParamDto.html",[15,0.095,498,2.545]],["body/classes/ParamDto.html",[3,0.305,4,0.265,5,0.265,9,0.481,10,0.025,14,0.305,15,0.154,18,0.02,19,0.02,54,0.726,55,1.896,64,0.902,68,0.841,234,2.321,249,2.164,252,3.129,271,2.152,344,1.632,383,4.152,389,2.321,498,4.152,499,3.8,500,4.488,501,4.488,502,4.714,503,3.8,504,3.8]],["title/classes/Payload.html",[15,0.095,78,1.636]],["body/classes/Payload.html",[3,0.298,4,0.259,5,0.259,9,0.379,10,0.025,14,0.298,15,0.122,18,0.02,19,0.02,54,0.711,55,1.871,64,1.205,68,1.123,78,2.634,80,1.644,200,2.874,249,2.136,306,5.076,309,3.41,344,1.598,358,1.96,505,3.72,506,4.393,507,4.393,508,4.393]],["title/classes/PrismaExceptionFilter.html",[15,0.095,141,2.287]],["body/classes/PrismaExceptionFilter.html",[3,0.231,4,0.201,5,0.201,9,0.457,10,0.025,11,0.549,14,0.231,15,0.094,18,0.017,19,0.017,54,0.549,58,1.581,64,0.683,66,1.084,67,1.084,68,0.636,69,0.953,71,2.832,74,1.157,77,2.6,82,1.756,87,1.924,112,2.832,121,2.056,141,3.112,241,1.902,312,3.545,344,1.236,347,2.4,374,3.931,450,4.478,468,2.533,492,4.478,497,2.876,509,2.876,510,5.289,511,4.643,512,5.685,513,5.685,514,3.397,515,3.397,516,3.397,517,3.397,518,2.876,519,3.397,520,3.397,521,3.397,522,3.397,523,3.397,524,3.397,525,3.397,526,4.478,527,3.397,528,4.643,529,3.397,530,3.397,531,3.397,532,3.397,533,3.397,534,3.397,535,3.397,536,2.277,537,3.397,538,3.397,539,3.397,540,3.397,541,3.397]],["title/modules/PrismaModule.html",[20,1.089,127,1.911]],["body/modules/PrismaModule.html",[3,0.29,4,0.252,5,0.252,9,0.466,10,0.025,11,0.69,14,0.29,15,0.118,18,0.019,19,0.019,20,1.721,22,1.775,23,2.244,29,2.586,30,2.045,31,2.045,33,3.02,34,3.02,127,3.723,542,3.612,543,3.612,544,3.612,545,3.873,546,4.266,547,4.266]],["title/injectables/PrismaService.html",[0,0.472,545,1.911]],["body/injectables/PrismaService.html",[0,0.7,2,1.317,3,0.262,4,0.228,5,0.228,9,0.437,10,0.025,11,0.626,14,0.262,15,0.107,16,2.618,18,0.018,19,0.018,54,0.626,58,1.725,64,1.018,66,1.234,67,1.234,68,0.724,69,1.084,74,1.725,224,3.639,298,3.394,347,1.999,358,1.725,481,2.884,545,2.835,548,3.274,549,5.645,550,5.063,551,6.379,552,5.063,553,5.99,554,3.867,555,3.867,556,3.867,557,3.867,558,3.867]],["title/classes/QueryDto.html",[15,0.095,559,2.082]],["body/classes/QueryDto.html",[3,0.147,4,0.128,5,0.128,9,0.397,10,0.025,14,0.147,15,0.093,18,0.017,19,0.012,54,0.351,55,1.141,64,1.136,68,1.059,69,1.289,80,1.571,102,1.324,196,3.893,207,2.836,234,2.922,249,2.041,252,2.922,257,1.619,271,1.041,292,3.823,344,0.789,357,1.324,358,0.968,386,3.429,389,1.122,390,3.203,398,1.455,405,3.915,503,1.838,504,1.838,536,3.97,559,2.043,560,1.838,561,3.463,562,4.207,563,3.463,564,4.207,565,4.633,566,3.463,567,3.349,568,5.651,569,2.17,570,2.17,571,4.968,572,2.17,573,2.17,574,4.09,575,4.598,576,4.598,577,4.598,578,2.17,579,2.17,580,3.349,581,4.09,582,2.17,583,2.17,584,3.893,585,3.349,586,3.349,587,2.17,588,2.17,589,2.17,590,3.349,591,2.498,592,2.836,593,2.17,594,2.17,595,2.17,596,2.17,597,2.17,598,5.472,599,2.17,600,2.17,601,4.09,602,5.799,603,2.17,604,2.17,605,2.17,606,2.17,607,2.17,608,2.17,609,2.17,610,2.17]],["title/injectables/RefreshTokenGuard.html",[0,0.472,285,2.287]],["body/injectables/RefreshTokenGuard.html",[0,0.8,2,1.628,3,0.324,4,0.282,5,0.282,8,3.564,9,0.5,10,0.025,11,0.773,12,3.564,13,2.471,14,0.324,15,0.132,16,2.471,17,4.046,18,0.021,19,0.021,228,2.916,282,2.471,285,3.878,611,2.916]],["title/modules/RefreshTokenModule.html",[20,1.089,333,2.082]],["body/modules/RefreshTokenModule.html",[3,0.236,4,0.205,5,0.205,9,0.518,10,0.025,11,0.562,14,0.236,15,0.096,18,0.017,19,0.017,20,1.505,22,1.447,23,1.962,29,2.261,30,1.667,31,1.667,32,2.944,33,2.641,34,2.641,35,2.997,36,2.081,37,1.184,38,2.944,39,1.947,41,2.593,42,2.944,43,2.641,44,2.944,45,2.331,46,2.331,47,2.121,48,2.944,50,2.944,51,2.944,228,2.878,281,3.758,282,1.798,333,3.982,611,2.121,612,2.944,613,2.944,614,2.944,615,3.775,616,3.477,617,3.477]],["title/injectables/RefreshTokenService.html",[0,0.472,281,1.911]],["body/injectables/RefreshTokenService.html",[0,0.567,2,0.969,3,0.193,4,0.168,5,0.168,9,0.481,10,0.025,11,0.46,14,0.193,15,0.079,18,0.015,19,0.015,36,2.326,37,0.969,39,1.593,53,2.122,54,0.46,55,1.396,56,3.221,57,4.916,58,1.396,59,3.471,60,3.471,61,1.829,62,2.409,63,4.329,64,1.12,65,3.471,66,1.534,67,1.534,68,1.044,69,1.347,70,3.471,71,3.65,73,3.057,74,1.396,75,3.057,76,3.471,77,2.691,78,2.521,80,1.226,81,2.409,82,1.471,83,1.736,84,1.471,85,3.471,87,1.748,88,3.471,89,2.409,90,3.471,92,4.069,93,2.409,94,1.184,95,2.409,96,2.409,97,2.501,98,2.409,99,2.409,100,2.409,281,2.296,282,3.002,611,3.542,618,2.845,619,2.845,620,2.409,621,2.845]],["title/injectables/RefreshTokenStrategy.html",[0,0.472,615,2.082]],["body/injectables/RefreshTokenStrategy.html",[0,0.637,2,1.146,3,0.228,4,0.199,5,0.199,9,0.529,10,0.025,11,0.544,13,1.739,14,0.228,15,0.093,16,1.739,18,0.017,19,0.017,36,2.306,37,1.146,54,0.544,56,2.255,58,1.571,61,1.501,64,0.927,66,1.472,67,1.472,68,0.864,69,1.293,74,1.146,78,3.008,82,1.739,83,2.052,87,1.914,101,2.509,102,2.814,103,3.905,104,2.848,105,3.905,107,2.848,108,2.848,109,2.848,110,2.509,111,3.091,112,3.21,113,2.848,114,3.905,116,3.905,117,2.848,118,2.848,119,2.509,120,2.848,121,1.308,228,2.052,282,2.721,611,3.21,615,2.814,620,2.848,622,3.364,623,3.364]],["title/guards/RoleGaurd.html",[624,2.545,625,2.287]],["body/guards/RoleGaurd.html",[0,0.512,3,0.168,4,0.146,5,0.146,9,0.425,10,0.026,11,0.401,14,0.168,15,0.069,18,0.013,19,0.013,54,0.401,58,1.261,61,1.652,64,0.744,66,1.182,67,1.182,68,0.694,69,1.038,71,2.259,74,0.844,77,1.387,80,1.472,84,1.915,87,1.613,94,1.031,121,1.724,140,1.661,224,2.483,237,1.387,241,2.074,242,3.484,249,0.963,252,2.293,264,1.847,275,2.359,295,3.755,298,1.661,309,1.281,310,2.098,347,1.281,348,3.928,350,3.928,358,1.105,420,1.847,493,2.762,625,2.482,626,2.477,627,2.098,628,4.921,629,2.477,630,5.526,631,2.477,632,3.703,633,4.166,634,2.477,635,2.477,636,2.477,637,3.703,638,2.477,639,3.703,640,2.477,641,3.703,642,4.435,643,2.762,644,2.477,645,3.703,646,2.477,647,2.477,648,3.703,649,2.477,650,2.477,651,2.477,652,2.477,653,2.477,654,3.703,655,3.703,656,2.477,657,2.477,658,2.477,659,4.921,660,2.477,661,2.477,662,2.477,663,2.477,664,2.477,665,2.477,666,2.477,667,2.477]],["title/classes/UpdateAuthDto.html",[15,0.095,668,2.545]],["body/classes/UpdateAuthDto.html",[3,0.35,4,0.305,5,0.305,10,0.023,14,0.35,15,0.143,18,0.022,19,0.022,344,1.877,361,3.848,668,4.517,669,4.369]],["title/classes/UpdateUserDto.html",[15,0.095,670,2.545]],["body/classes/UpdateUserDto.html",[3,0.329,4,0.286,5,0.286,9,0.504,10,0.025,14,0.329,15,0.134,16,2.505,18,0.021,19,0.021,241,2.714,271,2.323,343,2.957,344,1.763,346,3.614,670,4.351,671,4.103,672,4.846,673,4.103,674,4.846]],["title/classes/UserEntity.html",[15,0.095,258,2.082]],["body/classes/UserEntity.html",[3,0.186,4,0.162,5,0.162,9,0.406,10,0.025,14,0.186,15,0.111,18,0.014,19,0.014,54,0.443,55,1.359,61,1.222,64,1.278,66,0.874,67,0.874,68,1.192,69,0.768,80,1.878,119,4.52,200,2.255,234,2.671,242,2.634,249,1.551,252,2.432,257,2.043,258,2.434,271,1.314,309,3.134,344,0.997,347,2.062,348,3.508,349,3.983,350,3.508,351,3.153,357,1.672,358,1.222,383,2.975,384,2.043,405,3.853,408,3.377,536,2.674,591,3.508,592,3.983,675,2.32,676,3.983,677,3.989,678,5.491,679,3.989,680,4.704,681,2.74,682,2.74,683,2.74,684,2.74,685,2.74,686,2.74,687,2.74,688,2.74,689,2.74,690,2.74,691,5.167,692,5.167,693,2.74,694,2.74,695,2.74]],["title/controllers/UsersController.html",[219,2.082,696,2.287]],["body/controllers/UsersController.html",[3,0.213,4,0.185,5,0.185,9,0.518,10,0.025,11,0.508,14,0.213,15,0.087,18,0.016,19,0.016,54,0.508,58,1.497,64,1.019,66,1.619,67,1.619,68,0.95,69,1.422,74,1.728,80,1.794,121,1.972,209,1.758,219,1.915,222,2.658,234,2.623,244,2.658,252,2.842,264,2.341,266,4.295,269,3.722,270,2.658,271,1.505,275,2.432,294,2.341,309,1.623,358,1.4,559,3.353,643,2.341,696,2.947,697,2.658,698,3.722,699,3.722,700,3.722,701,3.139,702,3.139,703,2.658,704,4.396,705,3.139,706,2.658,707,4.396,708,3.139,709,3.139,710,3.139,711,3.139,712,2.658,713,2.658,714,2.104,715,3.139,716,3.139,717,3.139,718,3.139,719,3.139,720,3.139,721,3.139,722,3.139,723,3.139,724,3.139,725,3.139]],["title/modules/UsersModule.html",[20,1.089,128,1.911]],["body/modules/UsersModule.html",[3,0.242,4,0.21,5,0.21,9,0.55,10,0.025,11,0.576,14,0.242,15,0.099,18,0.017,19,0.017,20,1.53,22,1.481,23,1.994,29,2.298,30,1.707,31,1.707,33,2.684,34,2.684,35,2.684,37,1.213,43,2.684,127,3.489,128,3.673,137,4.059,140,2.387,209,2.684,210,3.015,211,3.015,275,3.23,625,3.213,696,3.632,712,3.015,726,3.015,727,3.015,728,3.015,729,3.561,730,3.561,731,3.561,732,3.561,733,3.561]],["title/injectables/UsersService.html",[0,0.472,275,1.636]],["body/injectables/UsersService.html",[0,0.378,2,0.572,3,0.114,4,0.099,5,0.099,9,0.461,10,0.025,11,0.272,14,0.114,15,0.047,18,0.01,19,0.01,36,1.548,37,0.572,47,2.109,54,0.272,55,0.931,58,0.931,61,1.219,64,1.102,66,1.703,67,1.703,68,1.028,69,1.496,74,1.758,77,1.935,80,1.791,84,2.266,87,1.877,94,0.699,121,2.006,167,2.926,200,1.311,213,3.319,224,3.459,230,2.315,237,2.63,241,1.531,242,2.63,249,2.182,252,2.429,258,1.025,265,1.423,275,1.311,294,2.039,298,3.46,309,0.869,343,2.43,351,2.938,357,1.668,358,0.749,467,1.423,468,1.253,494,1.423,545,2.23,559,2.43,561,2.315,562,2.315,563,2.315,564,2.315,565,2.315,566,2.315,591,1.253,643,1.253,673,1.423,676,1.423,698,2.926,699,2.315,700,2.315,703,2.315,706,2.315,713,1.423,714,1.126,734,1.423,735,2.734,736,3.456,737,2.734,738,2.734,739,1.68,740,2.734,741,2.734,742,1.68,743,1.68,744,1.68,745,1.68,746,2.734,747,1.68,748,1.68,749,2.734,750,3.982,751,1.68,752,2.734,753,1.68,754,2.734,755,1.68,756,1.68,757,1.68,758,1.68,759,2.315,760,1.68,761,2.734,762,1.68,763,1.68,764,1.68,765,1.68,766,1.68,767,1.68,768,4.698,769,1.68,770,1.68,771,1.68,772,1.68,773,1.68,774,1.68,775,2.734,776,2.734,777,2.734,778,1.68,779,1.68,780,1.68,781,1.68,782,1.68]],["title/classes/ValidationErrorDto.html",[15,0.095,272,2.287]],["body/classes/ValidationErrorDto.html",[3,0.299,4,0.26,5,0.26,10,0.024,14,0.299,15,0.122,18,0.02,19,0.02,54,0.714,55,1.876,64,1.207,68,1.125,80,1.882,249,2.141,272,3.692,273,4.691,312,4.026,344,1.605,493,4.479,526,5.085,783,3.736,784,4.412,785,4.412,786,4.412]],["title/classes/VerifyEmailDto.html",[15,0.095,261,2.287]],["body/classes/VerifyEmailDto.html",[3,0.311,4,0.271,5,0.271,9,0.396,10,0.025,14,0.311,15,0.156,18,0.02,19,0.02,54,0.742,55,1.922,64,0.922,68,0.859,80,1.688,97,3.729,234,2.372,261,3.783,344,1.669,386,4.558,389,2.372,502,3.885,787,4.779,788,3.885,789,4.588]],["title/coverage.html",[790,3.473]],["body/coverage.html",[0,0.882,1,1.762,5,0.155,6,2.802,7,2.374,8,2.886,10,0.025,15,0.175,18,0.014,19,0.014,27,1.472,28,1.604,53,2.886,68,0.492,78,1.26,101,2.886,141,1.762,213,1.762,219,2.361,220,1.762,221,2.226,233,1.762,258,1.604,261,1.762,272,1.762,273,1.96,275,1.26,279,1.472,281,1.472,282,2.374,283,1.96,285,1.762,343,1.604,345,2.226,346,2.886,360,2.226,361,2.886,395,1.96,396,2.226,398,1.762,399,2.886,400,2.226,431,1.96,432,2.226,433,2.226,460,2.226,498,1.96,499,2.226,505,2.226,509,2.226,545,1.472,548,2.226,559,1.604,560,2.226,584,5.846,611,2.802,615,1.604,624,1.96,625,1.762,627,2.226,668,1.96,669,2.226,670,1.96,671,2.226,675,2.226,696,1.762,697,2.226,714,1.762,734,2.226,783,2.226,787,2.226,788,2.226,790,1.96,791,2.628,792,2.628,793,2.628,794,5.991,795,4.592,796,5.839,797,2.628,798,2.226,799,3.869,800,2.226,801,4.592,802,4.592,803,2.226,804,2.628,805,2.226,806,2.628,807,2.628,808,2.628,809,2.628,810,2.628,811,2.628]],["title/dependencies.html",[23,1.707,812,2.413]],["body/dependencies.html",[10,0.025,11,0.597,13,1.907,15,0.136,18,0.018,19,0.018,23,1.534,37,1.256,39,2.065,82,1.907,110,4.113,111,2.472,135,3.123,140,2.472,146,3.123,271,1.768,357,2.25,358,1.645,384,2.75,389,1.907,445,2.75,446,2.75,759,3.123,813,3.688,814,5.879,815,3.688,816,3.688,817,3.688,818,3.688,819,3.688,820,3.688,821,3.688,822,3.688,823,3.688,824,3.688,825,3.688,826,3.688,827,3.688,828,3.688,829,3.688,830,3.688,831,3.688,832,3.688,833,3.688,834,3.688,835,3.688,836,3.688,837,3.688,838,3.688,839,3.688,840,3.688,841,3.688,842,3.688,843,3.688,844,3.688,845,3.688,846,3.688,847,3.688,848,3.688,849,3.688,850,3.688,851,3.688]],["title/miscellaneous/functions.html",[852,1.91,853,3.475]],["body/miscellaneous/functions.html",[10,0.022,18,0.022,19,0.022,54,0.847,803,4.436,805,5.478,852,3.512,853,4.436,854,5.239]],["title/index.html",[54,0.461,855,2.85,856,2.85]],["body/index.html",[4,0.217,10,0.025,18,0.018,19,0.018,153,3.111,154,4.145,292,2.242,477,3.111,481,2.74,790,2.74,857,3.675,858,3.675,859,4.896,860,3.675,861,3.675,862,3.675,863,3.675,864,3.675,865,3.675,866,5.505,867,3.675,868,3.675,869,3.675,870,3.675,871,6.419,872,3.675,873,3.675,874,6.288,875,3.675,876,3.675,877,4.896,878,3.675,879,3.675,880,3.675,881,4.896,882,3.675,883,3.675,884,3.675,885,4.896,886,4.896,887,3.675,888,3.675,889,3.675,890,3.675,891,3.675,892,3.111,893,3.675,894,3.675,895,3.675,896,3.675,897,3.675,898,3.675,899,3.675,900,3.675,901,3.675,902,3.111,903,3.675,904,3.675,905,3.675,906,3.675,907,3.675,908,3.675,909,3.111]],["title/modules.html",[22,1.937]],["body/modules.html",[10,0.02,18,0.02,19,0.02,21,2.799,22,1.909,122,3.075,125,2.799,126,2.569,127,2.569,128,2.569,333,2.799,489,5.719,892,5.719,910,6.754,911,6.754]],["title/overview.html",[912,3.943]],["body/overview.html",[2,1.014,10,0.025,18,0.015,19,0.015,21,3.781,22,1.238,23,1.761,24,2.52,25,2.52,26,2.52,27,3.395,28,3.006,29,2.03,30,1.427,31,1.427,122,4.287,123,2.52,124,2.52,125,3.947,126,3.395,127,3.395,128,3.531,179,2.52,209,1.667,275,2.907,279,3.395,281,3.395,331,2.52,332,2.52,333,3.781,344,1.083,370,2.52,440,2.52,441,2.52,442,2.52,542,2.52,543,2.52,544,2.52,545,3.395,612,2.52,613,2.52,614,2.52,615,3.006,624,2.22,726,2.52,727,2.52,728,2.52,912,2.52,913,2.977,914,2.977,915,2.977]],["title/properties.html",[55,1.398,812,2.413]],["body/properties.html",[10,0.025,18,0.022,19,0.022,55,1.758,292,3.148,902,4.369,909,4.369,916,5.161,917,5.161,918,5.161]],["title/miscellaneous/variables.html",[852,1.91,919,3.475]],["body/miscellaneous/variables.html",[10,0.025,18,0.02,19,0.02,54,0.739,87,1.661,112,2.787,121,1.776,237,2.558,283,4.197,309,3.154,390,3.434,518,3.868,536,3.773,633,3.868,714,3.773,798,3.868,800,3.868,852,3.062,919,3.868,920,4.568,921,4.568,922,4.568,923,4.568,924,4.568,925,4.568,926,4.568]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":584,"title":{},"body":{"classes/QueryDto.html":{},"coverage.html":{}}}],["0.0.1",{"_index":917,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["0.10.0",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":576,"title":{},"body":{"classes/QueryDto.html":{}}}],["01t11:59:59.999z",{"_index":577,"title":{},"body":{"classes/QueryDto.html":{}}}],["1",{"_index":370,"title":{},"body":{"classes/CredentialLogin.html":{},"overview.html":{}}}],["1.0.0",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"classes/QueryDto.html":{}}}],["11",{"_index":915,"title":{},"body":{"overview.html":{}}}],["12",{"_index":914,"title":{},"body":{"overview.html":{}}}],["15",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["17.7.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":913,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":649,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["2021",{"_index":575,"title":{},"body":{"classes/QueryDto.html":{}}}],["24",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["3.0.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":657,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["465",{"_index":452,"title":{},"body":{"modules/MailModule.html":{}}}],["5.1.0",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["7.2.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":365,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["9",{"_index":381,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["9.0.0",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_date",{"_index":401,"title":{},"body":{"injectables/IsGte.html":{}}}],["_date(value",{"_index":404,"title":{},"body":{"injectables/IsGte.html":{}}}],["_number",{"_index":402,"title":{},"body":{"injectables/IsGte.html":{}}}],["_number(value",{"_index":409,"title":{},"body":{"injectables/IsGte.html":{}}}],["abortearly",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["access",{"_index":40,"title":{},"body":{"modules/AccessTokenModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["access_token_cookie_name",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["access_token_expiration_time",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["access_token_secret",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["accesstokenguard",{"_index":1,"title":{"injectables/AccessTokenGuard.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["accesstokenmodule",{"_index":21,"title":{"modules/AccessTokenModule.html":{}},"body":{"modules/AccessTokenModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["accesstokenservice",{"_index":27,"title":{"injectables/AccessTokenService.html":{}},"body":{"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"controllers/AuthController.html":{},"coverage.html":{},"overview.html":{}}}],["accesstokenstrategy",{"_index":28,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"modules/AccessTokenModule.html":{},"injectables/AccessTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["account",{"_index":490,"title":{},"body":{"injectables/MailService.html":{}}}],["allowed_origin",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["allowunknown",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["already",{"_index":529,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["amazing",{"_index":893,"title":{},"body":{"index.html":{}}}],["any)[relatedpropertyname",{"_index":424,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["api",{"_index":637,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["apibadrequestresponse",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconflictresponse",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicookieauth",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apierror",{"_index":653,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["apierrorexample",{"_index":656,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["apigroup",{"_index":641,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["apihideproperty",{"_index":691,"title":{},"body":{"classes/UserEntity.html":{}}}],["apihideproperty()@exclude",{"_index":680,"title":{},"body":{"classes/UserEntity.html":{}}}],["apiname",{"_index":639,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["apiparam",{"_index":642,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["apiproperty",{"_index":383,"title":{},"body":{"classes/CredentialLogin.html":{},"classes/ParamDto.html":{},"classes/UserEntity.html":{}}}],["apiproperty()@isnumber()@min(1",{"_index":500,"title":{},"body":{"classes/ParamDto.html":{}}}],["apiproperty({enum",{"_index":688,"title":{},"body":{"classes/UserEntity.html":{}}}],["apiproperty({minlength",{"_index":364,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["apipropertyoptional",{"_index":598,"title":{},"body":{"classes/QueryDto.html":{}}}],["apipropertyoptional({default",{"_index":571,"title":{},"body":{"classes/QueryDto.html":{}}}],["apipropertyoptional({description",{"_index":567,"title":{},"body":{"classes/QueryDto.html":{}}}],["apipropertyoptional({format",{"_index":574,"title":{},"body":{"classes/QueryDto.html":{}}}],["apisuccess",{"_index":645,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["apisuccessexample",{"_index":646,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["apitags",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":717,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":481,"title":{},"body":{"injectables/MailService.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":558,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app_filter",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["app_interceptor",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":865,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":122,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":414,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["args.constraints",{"_index":422,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["args.object",{"_index":423,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["args.property",{"_index":430,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["argumentshost",{"_index":513,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["async",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/PrismaService.html":{},"guards/RoleGaurd.html":{},"injectables/UsersService.html":{}}}],["atleast",{"_index":369,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["auth",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/decorator/role.gaurd",{"_index":760,"title":{},"body":{"injectables/UsersService.html":{}}}],["auth/gaurd/role.gaurd",{"_index":733,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth/refresh",{"_index":96,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["authcontroller",{"_index":220,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":12,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/GoogleGaurd.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authguard(\"google",{"_index":397,"title":{},"body":{"injectables/GoogleGaurd.html":{}}}],["authguard('jwt",{"_index":17,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authmodule",{"_index":125,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":902,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authuser",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PrismaService.html":{},"guards/RoleGaurd.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":894,"title":{},"body":{"index.html":{}}}],["bad",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["bcrypt",{"_index":759,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":764,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(password",{"_index":763,"title":{},"body":{"injectables/UsersService.html":{}}}],["below",{"_index":485,"title":{},"body":{"injectables/MailService.html":{}}}],["body",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":408,"title":{},"body":{"injectables/IsGte.html":{},"classes/UserEntity.html":{}}}],["bootstrap",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":911,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":489,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["building",{"_index":860,"title":{},"body":{"index.html":{}}}],["cache",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":628,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["canactivate(context",{"_index":632,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["case",{"_index":374,"title":{},"body":{"classes/CredentialLogin.html":{},"classes/PrismaExceptionFilter.html":{}}}],["case'})@matches(/[0",{"_index":380,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["case'})@matches(/[a",{"_index":378,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["catch",{"_index":492,"title":{},"body":{"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{}}}],["catch(exception",{"_index":511,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["catch(prismaclientknownrequesterror",{"_index":517,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["character",{"_index":372,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["character'})@matches(/[a",{"_index":376,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["class",{"_index":15,"title":{"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"classes/QueryDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"classes/QueryDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["clearcookie",{"_index":59,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["clearcookie(res",{"_index":70,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["click",{"_index":483,"title":{},"body":{"injectables/MailService.html":{}}}],["cluster_accesstokenmodule",{"_index":24,"title":{},"body":{"modules/AccessTokenModule.html":{},"overview.html":{}}}],["cluster_accesstokenmodule_exports",{"_index":25,"title":{},"body":{"modules/AccessTokenModule.html":{},"overview.html":{}}}],["cluster_accesstokenmodule_providers",{"_index":26,"title":{},"body":{"modules/AccessTokenModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":440,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":441,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":442,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":542,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":543,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":544,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_refreshtokenmodule",{"_index":612,"title":{},"body":{"modules/RefreshTokenModule.html":{},"overview.html":{}}}],["cluster_refreshtokenmodule_exports",{"_index":613,"title":{},"body":{"modules/RefreshTokenModule.html":{},"overview.html":{}}}],["cluster_refreshtokenmodule_providers",{"_index":614,"title":{},"body":{"modules/RefreshTokenModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":726,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":727,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":729,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":728,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["comment",{"_index":666,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["composedoc",{"_index":667,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["config",{"_index":47,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/RefreshTokenModule.html":{},"injectables/UsersService.html":{}}}],["config.getorthrow('access_token_expiration_time",{"_index":52,"title":{},"body":{"modules/AccessTokenModule.html":{}}}],["config.getorthrow('access_token_secret",{"_index":49,"title":{},"body":{"modules/AccessTokenModule.html":{}}}],["config.getorthrow('refresh_token_expiration_time",{"_index":617,"title":{},"body":{"modules/RefreshTokenModule.html":{}}}],["config.getorthrow('refresh_token_secret",{"_index":616,"title":{},"body":{"modules/RefreshTokenModule.html":{}}}],["config.getorthrow('smtp_api_host",{"_index":451,"title":{},"body":{"modules/MailModule.html":{}}}],["config.getorthrow('smtp_api_key",{"_index":456,"title":{},"body":{"modules/MailModule.html":{}}}],["config.getorthrow('smtp_api_user",{"_index":454,"title":{},"body":{"modules/MailModule.html":{}}}],["config.getorthrow('smtp_mail_from",{"_index":459,"title":{},"body":{"modules/MailModule.html":{}}}],["config.getorthrow('throttle_limit",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["config.getorthrow('throttle_ttl",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":35,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":36,"title":{},"body":{"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UsersService.html":{}}}],["configservice.getorthrow('access_token_cookie_name",{"_index":86,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{}}}],["configservice.getorthrow('access_token_expiration_time",{"_index":91,"title":{},"body":{"injectables/AccessTokenService.html":{}}}],["configservice.getorthrow('access_token_secret",{"_index":115,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["configservice.getorthrow('cookie_domain",{"_index":89,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["configservice.getorthrow('refresh_token_cookie_name",{"_index":620,"title":{},"body":{"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["configservice.getorthrow('refresh_token_expiration_time",{"_index":621,"title":{},"body":{"injectables/RefreshTokenService.html":{}}}],["configservice.getorthrow('refresh_token_secret",{"_index":623,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["confirm",{"_index":478,"title":{},"body":{"injectables/MailService.html":{}}}],["confirmation",{"_index":474,"title":{},"body":{"injectables/MailService.html":{}}}],["const",{"_index":87,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/MailService.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["constructor(configservice",{"_index":103,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["constructor(jwtservice",{"_index":62,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["constructor(mailservice",{"_index":462,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(partial",{"_index":677,"title":{},"body":{"classes/UserEntity.html":{}}}],["constructor(prisma",{"_index":739,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":719,"title":{},"body":{"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":629,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["contain",{"_index":368,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["contains",{"_index":561,"title":{},"body":{"classes/QueryDto.html":{},"injectables/UsersService.html":{}}}],["context",{"_index":635,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["context.getclass",{"_index":662,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["context.gethandler",{"_index":661,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["context.switchtohttp().getrequest",{"_index":663,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["controller",{"_index":219,"title":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":716,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["cookie_domain",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["cookiename",{"_index":56,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["cookieoptions",{"_index":57,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["copy",{"_index":487,"title":{},"body":{"injectables/MailService.html":{}}}],["coverage",{"_index":790,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"guards/RoleGaurd.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["create(data",{"_index":741,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["createdat",{"_index":591,"title":{},"body":{"classes/QueryDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["createparamdecorator",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuser",{"_index":658,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["createuserdto",{"_index":343,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentail",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentail.password",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentaillogin",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentaillogin(response",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentailsignup",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentailsignup(@body",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentailsignup(body",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentiallogin",{"_index":233,"title":{"classes/CredentialLogin.html":{}},"body":{"controllers/AuthController.html":{},"classes/CredentialLogin.html":{},"coverage.html":{}}}],["credentials",{"_index":770,"title":{},"body":{"injectables/UsersService.html":{}}}],["ctx",{"_index":518,"title":{},"body":{"classes/PrismaExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":521,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":520,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":77,"title":{},"body":{"injectables/AccessTokenService.html":{},"controllers/AuthController.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/RefreshTokenService.html":{},"guards/RoleGaurd.html":{},"injectables/UsersService.html":{}}}],["data.email",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.id",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.password",{"_index":772,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.role",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"guards/RoleGaurd.html":{}}}],["database_url",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":405,"title":{},"body":{"injectables/IsGte.html":{},"classes/QueryDto.html":{},"classes/UserEntity.html":{}}}],["date'})@isoptional",{"_index":578,"title":{},"body":{"classes/QueryDto.html":{}}}],["date'})@isoptional()@validate(isgte",{"_index":596,"title":{},"body":{"classes/QueryDto.html":{}}}],["days",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["dbml",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["decorator/auth.gaurd",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorator/is",{"_index":603,"title":{},"body":{"classes/QueryDto.html":{}}}],["decorators",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"classes/CredentialLogin.html":{},"classes/ParamDto.html":{},"classes/QueryDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"classes/VerifyEmailDto.html":{}}}],["default",{"_index":536,"title":{},"body":{"classes/PrismaExceptionFilter.html":{},"classes/QueryDto.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultmessage",{"_index":403,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["defaultmessage(args",{"_index":411,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["defaults",{"_index":457,"title":{},"body":{"modules/MailModule.html":{}}}],["defaultstrategy",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":64,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{}}}],["delete",{"_index":711,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":707,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":23,"title":{"dependencies.html":{}},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"classes/CredentialLogin.html":{},"classes/QueryDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":873,"title":{},"body":{"index.html":{}}}],["direction",{"_index":607,"title":{},"body":{"classes/QueryDto.html":{}}}],["direction'})@isoptional()@isenum(prisma.sortorder",{"_index":582,"title":{},"body":{"classes/QueryDto.html":{}}}],["documentation",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":652,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["domain",{"_index":88,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["dto/create",{"_index":757,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/credential",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/verify",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["e2e",{"_index":882,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":861,"title":{},"body":{"index.html":{}}}],["email",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/MailService.html":{},"classes/Payload.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["emaill.dto",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["emaill.dto.ts",{"_index":788,"title":{},"body":{"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["emaill.dto.ts:5",{"_index":789,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["enableimplicitconversion",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["enableshutdownhooks",{"_index":550,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":552,"title":{},"body":{"injectables/PrismaService.html":{}}}],["entities/auth.entity",{"_index":83,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["entities/user.entity",{"_index":758,"title":{},"body":{"injectables/UsersService.html":{}}}],["enum",{"_index":693,"title":{},"body":{"classes/UserEntity.html":{}}}],["error",{"_index":493,"title":{},"body":{"injectables/MailService.html":{},"guards/RoleGaurd.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.dto.ts",{"_index":783,"title":{},"body":{"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["error.dto.ts:2",{"_index":786,"title":{},"body":{"classes/ValidationErrorDto.html":{}}}],["error.dto.ts:3",{"_index":785,"title":{},"body":{"classes/ValidationErrorDto.html":{}}}],["error.dto.ts:4",{"_index":784,"title":{},"body":{"classes/ValidationErrorDto.html":{}}}],["example",{"_index":366,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["exceed",{"_index":438,"title":{},"body":{"injectables/IsValidPos.html":{}}}],["exception",{"_index":515,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["exception.code",{"_index":523,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["exceptionfilter",{"_index":510,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["exclude",{"_index":692,"title":{},"body":{"classes/UserEntity.html":{}}}],["executioncontext",{"_index":633,"title":{},"body":{"guards/RoleGaurd.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":535,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["exists",{"_index":530,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["expiresin",{"_index":51,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/RefreshTokenModule.html":{}}}],["export",{"_index":14,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{}}}],["exports",{"_index":34,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":82,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":16,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/GoogleGaurd.html":{},"injectables/PrismaService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":108,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":117,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["false",{"_index":420,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"guards/RoleGaurd.html":{}}}],["field",{"_index":562,"title":{},"body":{"classes/QueryDto.html":{},"injectables/UsersService.html":{}}}],["field'})@isoptional()@isstring",{"_index":572,"title":{},"body":{"classes/QueryDto.html":{}}}],["field'})@isoptional()@isstring()@isin(['id",{"_index":589,"title":{},"body":{"classes/QueryDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["filter",{"_index":568,"title":{},"body":{"classes/QueryDto.html":{}}}],["findall",{"_index":698,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":720,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(query",{"_index":701,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(undefined",{"_index":743,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":699,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":722,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":703,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":585,"title":{},"body":{"classes/QueryDto.html":{}}}],["firstname",{"_index":348,"title":{},"body":{"classes/CreateUserDto.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{}}}],["forbidnonwhitelisted",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["format",{"_index":609,"title":{},"body":{"classes/QueryDto.html":{}}}],["found",{"_index":655,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["framework",{"_index":859,"title":{},"body":{"index.html":{}}}],["function",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":853,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["get(':id",{"_index":704,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('me",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('me')@useguards(accesstokenguard",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh')@apicookieauth()@useguards(refreshtokenguard",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('verify",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":855,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":640,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["google_client_id",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["google_client_secret",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["googlegaurd",{"_index":395,"title":{"injectables/GoogleGaurd.html":{}},"body":{"injectables/GoogleGaurd.html":{},"coverage.html":{}}}],["greater",{"_index":429,"title":{},"body":{"injectables/IsGte.html":{}}}],["grow",{"_index":889,"title":{},"body":{"index.html":{}}}],["gte",{"_index":775,"title":{},"body":{"injectables/UsersService.html":{}}}],["gte.decorator",{"_index":604,"title":{},"body":{"classes/QueryDto.html":{}}}],["gte.decorator.ts",{"_index":400,"title":{},"body":{"injectables/IsGte.html":{},"coverage.html":{}}}],["gte.decorator.ts:22",{"_index":410,"title":{},"body":{"injectables/IsGte.html":{}}}],["gte.decorator.ts:26",{"_index":407,"title":{},"body":{"injectables/IsGte.html":{}}}],["gte.decorator.ts:30",{"_index":413,"title":{},"body":{"injectables/IsGte.html":{}}}],["gte.decorator.ts:8",{"_index":416,"title":{},"body":{"injectables/IsGte.html":{}}}],["guard",{"_index":624,"title":{"guards/RoleGaurd.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":626,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["handlebars",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":750,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":735,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(password",{"_index":746,"title":{},"body":{"injectables/UsersService.html":{}}}],["here",{"_index":899,"title":{},"body":{"index.html":{}}}],["host",{"_index":450,"title":{},"body":{"modules/MailModule.html":{},"classes/PrismaExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":519,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["html",{"_index":482,"title":{},"body":{"injectables/MailService.html":{}}}],["http/1.1",{"_index":648,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["httpexception",{"_index":467,"title":{},"body":{"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["httpexception(\"unable",{"_index":495,"title":{},"body":{"injectables/MailService.html":{}}}],["httpexception('invalid",{"_index":769,"title":{},"body":{"injectables/UsersService.html":{}}}],["httponly",{"_index":93,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["https://nestjs.com",{"_index":906,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":468,"title":{},"body":{"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/UsersService.html":{}}}],["httpstatus.conflict",{"_index":527,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":497,"title":{},"body":{"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":533,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["httpstatus.unauthorized",{"_index":771,"title":{},"body":{"injectables/UsersService.html":{}}}],["id",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"classes/ParamDto.html":{},"classes/QueryDto.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":491,"title":{},"body":{"injectables/MailService.html":{}}}],["image",{"_index":349,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserEntity.html":{}}}],["implements",{"_index":347,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/PrismaService.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{}}}],["import",{"_index":9,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{}}}],["imports",{"_index":43,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":553,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{}}}],["inject",{"_index":45,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/RefreshTokenModule.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":870,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":872,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":427,"title":{},"body":{"injectables/IsGte.html":{}}}],["isemail",{"_index":385,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["isemail()@transform",{"_index":362,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["isenum",{"_index":599,"title":{},"body":{"classes/QueryDto.html":{}}}],["isenum(prisma.sortorder",{"_index":608,"title":{},"body":{"classes/QueryDto.html":{}}}],["isgreaterthanequal",{"_index":419,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["isgte",{"_index":398,"title":{"injectables/IsGte.html":{}},"body":{"injectables/IsGte.html":{},"classes/QueryDto.html":{},"coverage.html":{}}}],["isin",{"_index":600,"title":{},"body":{"classes/QueryDto.html":{}}}],["isin(['id",{"_index":606,"title":{},"body":{"classes/QueryDto.html":{}}}],["isint",{"_index":601,"title":{},"body":{"classes/QueryDto.html":{}}}],["isnumber",{"_index":502,"title":{},"body":{"classes/ParamDto.html":{},"classes/VerifyEmailDto.html":{}}}],["isoptional",{"_index":602,"title":{},"body":{"classes/QueryDto.html":{}}}],["isrole",{"_index":714,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isrole(role.admin",{"_index":718,"title":{},"body":{"controllers/UsersController.html":{}}}],["isstring",{"_index":386,"title":{},"body":{"classes/CredentialLogin.html":{},"classes/QueryDto.html":{},"classes/VerifyEmailDto.html":{}}}],["isvalidpos",{"_index":431,"title":{"injectables/IsValidPos.html":{}},"body":{"injectables/IsValidPos.html":{},"coverage.html":{}}}],["john",{"_index":651,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["joi",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(10",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(100",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(60",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"apikey",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"smtp.sendgrid.net",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('access_token",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('http://localhost:3000/auth/verify",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('localhost",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('refresh_token",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(15",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(7",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":896,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":111,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":116,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtmodule",{"_index":38,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/RefreshTokenModule.html":{}}}],["jwtmodule.registerasync",{"_index":44,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/RefreshTokenModule.html":{}}}],["jwtservice",{"_index":63,"title":{},"body":{"injectables/AccessTokenService.html":{},"controllers/AuthController.html":{},"injectables/RefreshTokenService.html":{}}}],["kamil",{"_index":903,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{}}}],["license",{"_index":909,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":886,"title":{},"body":{"index.html":{}}}],["limit",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"classes/QueryDto.html":{}}}],["link",{"_index":484,"title":{},"body":{"injectables/MailService.html":{}}}],["local",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["login.dto",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.dto.ts",{"_index":361,"title":{},"body":{"classes/CredentialLogin.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["login.dto.ts:21",{"_index":382,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["login.dto.ts:8",{"_index":363,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["logout",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(response",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["lower",{"_index":379,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["lte",{"_index":776,"title":{},"body":{"injectables/UsersService.html":{}}}],["mail",{"_index":475,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":447,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule",{"_index":444,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":448,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":463,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":126,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":279,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":387,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["matches(/[0",{"_index":394,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["matches(/[a",{"_index":393,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["matching",{"_index":19,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":90,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["me(@authuser",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(id",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["message",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"classes/CredentialLogin.html":{},"classes/PrismaExceptionFilter.html":{},"classes/ValidationErrorDto.html":{}}}],["metadata",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":58,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/PrismaService.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":503,"title":{},"body":{"classes/ParamDto.html":{},"classes/QueryDto.html":{}}}],["min(0",{"_index":605,"title":{},"body":{"classes/QueryDto.html":{}}}],["min(1",{"_index":504,"title":{},"body":{"classes/ParamDto.html":{},"classes/QueryDto.html":{}}}],["minlength",{"_index":388,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["minlength(8",{"_index":392,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["minutes",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":852,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":885,"title":{},"body":{"index.html":{}}}],["mode",{"_index":877,"title":{},"body":{"index.html":{}}}],["module",{"_index":20,"title":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":22,"title":{"modules.html":{}},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":446,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["more",{"_index":898,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":904,"title":{},"body":{"index.html":{}}}],["n",{"_index":586,"title":{},"body":{"classes/QueryDto.html":{}}}],["name",{"_index":67,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/PrismaService.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":866,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":908,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":445,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":37,"title":{},"body":{"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"guards/RoleGaurd.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":39,"title":{},"body":{"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"controllers/AuthController.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":13,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"injectables/GoogleGaurd.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"classes/CredentialLogin.html":{},"classes/ParamDto.html":{},"classes/QueryDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":858,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["nodemailer",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["npm",{"_index":871,"title":{},"body":{"index.html":{}}}],["null",{"_index":119,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UserEntity.html":{}}}],["number",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"classes/CredentialLogin.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/QueryDto.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{}}}],["number'})@isstring()@minlength(8)@matches",{"_index":375,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["object.assign(this",{"_index":695,"title":{},"body":{"classes/UserEntity.html":{}}}],["ok",{"_index":650,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["onmoduleinit",{"_index":551,"title":{},"body":{"injectables/PrismaService.html":{}}}],["oops",{"_index":538,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["open",{"_index":887,"title":{},"body":{"index.html":{}}}],["optional",{"_index":69,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["order",{"_index":563,"title":{},"body":{"classes/QueryDto.html":{},"injectables/UsersService.html":{}}}],["orderby",{"_index":777,"title":{},"body":{"injectables/UsersService.html":{}}}],["out",{"_index":31,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":912,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":524,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["p2025",{"_index":531,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["package",{"_index":812,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":710,"title":{},"body":{"controllers/UsersController.html":{}}}],["paramdto",{"_index":498,"title":{"classes/ParamDto.html":{}},"body":{"classes/ParamDto.html":{},"coverage.html":{}}}],["parameters",{"_index":66,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/PrismaService.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parser",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":678,"title":{},"body":{"classes/UserEntity.html":{}}}],["partialtype",{"_index":672,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":674,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":455,"title":{},"body":{"modules/MailModule.html":{}}}],["passport",{"_index":110,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":107,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":113,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passthrough",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["password@123",{"_index":367,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["paste",{"_index":488,"title":{},"body":{"injectables/MailService.html":{}}}],["patch",{"_index":709,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":95,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["payload",{"_index":78,"title":{"classes/Payload.html":{}},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/Payload.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["please",{"_index":477,"title":{},"body":{"injectables/MailService.html":{},"index.html":{}}}],["port",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["pos.decorator.ts",{"_index":433,"title":{},"body":{"injectables/IsValidPos.html":{},"coverage.html":{}}}],["pos.decorator.ts:18",{"_index":434,"title":{},"body":{"injectables/IsValidPos.html":{}}}],["pos.decorator.ts:8",{"_index":435,"title":{},"body":{"injectables/IsValidPos.html":{}}}],["post",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"guards/RoleGaurd.html":{},"controllers/UsersController.html":{}}}],["post(\"login",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"logout",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"signup",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup')@apiconflictresponse({description",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":357,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/QueryDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma.service",{"_index":547,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.sortorder",{"_index":580,"title":{},"body":{"classes/QueryDto.html":{}}}],["prisma.sortorder.asc",{"_index":581,"title":{},"body":{"classes/QueryDto.html":{}}}],["prisma.usercreateinput",{"_index":359,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["prisma/client",{"_index":358,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/Payload.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/client/runtime",{"_index":516,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["prisma/filter/prisma.filter",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.module",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":756,"title":{},"body":{"injectables/UsersService.html":{}}}],["prismaclient",{"_index":549,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":512,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["prismaexceptionfilter",{"_index":141,"title":{"classes/PrismaExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/PrismaExceptionFilter.html":{},"coverage.html":{}}}],["prismamodule",{"_index":127,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":545,"title":{"injectables/PrismaService.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":84,"title":{},"body":{"injectables/AccessTokenService.html":{},"controllers/AuthController.html":{},"injectables/IsGte.html":{},"injectables/MailService.html":{},"injectables/RefreshTokenService.html":{},"guards/RoleGaurd.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":857,"title":{},"body":{"index.html":{}}}],["project",{"_index":888,"title":{},"body":{"index.html":{}}}],["properties",{"_index":55,"title":{"properties.html":{}},"body":{"injectables/AccessTokenService.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenService.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"properties.html":{}}}],["property",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{}}}],["provide",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["providers",{"_index":33,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{}}}],["provision",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":736,"title":{},"body":{"injectables/UsersService.html":{}}}],["query",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["querydto",{"_index":559,"title":{"classes/QueryDto.html":{}},"body":{"classes/QueryDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["question",{"_index":590,"title":{},"body":{"classes/QueryDto.html":{}}}],["read",{"_index":897,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":630,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["refresh",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["refresh(@authuser",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(id",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token_cookie_name",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["refresh_token_expiration_time",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["refresh_token_secret",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["refreshtokenguard",{"_index":285,"title":{"injectables/RefreshTokenGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["refreshtokenmodule",{"_index":333,"title":{"modules/RefreshTokenModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/RefreshTokenModule.html":{},"modules.html":{},"overview.html":{}}}],["refreshtokenservice",{"_index":281,"title":{"injectables/RefreshTokenService.html":{}},"body":{"controllers/AuthController.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"coverage.html":{},"overview.html":{}}}],["refreshtokenstrategy",{"_index":615,"title":{"injectables/RefreshTokenStrategy.html":{}},"body":{"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["relatedpropertyname",{"_index":421,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["relatedvalue",{"_index":406,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["relatedvalue.length",{"_index":437,"title":{},"body":{"injectables/IsValidPos.html":{}}}],["remove",{"_index":700,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":724,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":706,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reply",{"_index":458,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":869,"title":{},"body":{"index.html":{}}}],["request",{"_index":112,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/RefreshTokenStrategy.html":{},"miscellaneous/variables.html":{}}}],["request.method.tolowercase",{"_index":534,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["request.user.sub",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request?.cookies?.[cookiename",{"_index":118,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["requests",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["requiredrole",{"_index":659,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["res",{"_index":73,"title":{},"body":{"injectables/AccessTokenService.html":{},"controllers/AuthController.html":{},"injectables/RefreshTokenService.html":{}}}],["res.clearcookie(this.cookiename",{"_index":100,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["res.cookie",{"_index":99,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["reset",{"_index":30,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":71,"title":{},"body":{"injectables/AccessTokenService.html":{},"controllers/AuthController.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/RefreshTokenService.html":{},"guards/RoleGaurd.html":{}}}],["response.status(httpstatus.conflict).json",{"_index":525,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["response.status(httpstatus.internal_server_error).json",{"_index":537,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["response.status(httpstatus.not_found).json",{"_index":532,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["results",{"_index":18,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results'})@isoptional()@isint()@min(0",{"_index":587,"title":{},"body":{"classes/QueryDto.html":{}}}],["results'})@isoptional()@isint()@min(1",{"_index":594,"title":{},"body":{"classes/QueryDto.html":{}}}],["return",{"_index":121,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":74,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/PrismaService.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"classes/Payload.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["role.user",{"_index":694,"title":{},"body":{"classes/UserEntity.html":{}}}],["rolegaurd",{"_index":625,"title":{"guards/RoleGaurd.html":{}},"body":{"guards/RoleGaurd.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["run",{"_index":874,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":862,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["secret",{"_index":48,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/RefreshTokenModule.html":{}}}],["secretorkey",{"_index":114,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["secure",{"_index":453,"title":{},"body":{"modules/MailModule.html":{}}}],["send",{"_index":496,"title":{},"body":{"injectables/MailService.html":{}}}],["sendcookie",{"_index":60,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["sendcookie(res",{"_index":76,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["sendtoken",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendtoken(response",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendverificationmail",{"_index":461,"title":{},"body":{"injectables/MailService.html":{}}}],["sendverificationmail(to",{"_index":465,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":863,"title":{},"body":{"index.html":{}}}],["session",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["setmetadata('role",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":864,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":50,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/RefreshTokenModule.html":{}}}],["size",{"_index":439,"title":{},"body":{"injectables/IsValidPos.html":{}}}],["skip",{"_index":564,"title":{},"body":{"classes/QueryDto.html":{},"injectables/UsersService.html":{}}}],["smtp_api_host",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_api_key",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_api_user",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_mail_from",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["something",{"_index":539,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["sort",{"_index":565,"title":{},"body":{"classes/QueryDto.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/GoogleGaurd.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"index.html":{}}}],["special",{"_index":371,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["sponsors",{"_index":891,"title":{},"body":{"index.html":{}}}],["src/.../auth.gaurd.ts",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.gaurd.ts",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/access",{"_index":6,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:43",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:61",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:69",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:78",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:82",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":334,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/decorator/auth.gaurd.ts",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/role.gaurd",{"_index":715,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/auth/decorator/role.gaurd.ts",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/credential",{"_index":360,"title":{},"body":{"classes/CredentialLogin.html":{},"coverage.html":{}}}],["src/auth/dto/oauth",{"_index":669,"title":{},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/verify",{"_index":787,"title":{},"body":{"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":505,"title":{},"body":{"classes/Payload.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts:4",{"_index":508,"title":{},"body":{"classes/Payload.html":{}}}],["src/auth/entities/auth.entity.ts:5",{"_index":506,"title":{},"body":{"classes/Payload.html":{}}}],["src/auth/entities/auth.entity.ts:6",{"_index":507,"title":{},"body":{"classes/Payload.html":{}}}],["src/auth/gaurd/google.gaurd.ts",{"_index":396,"title":{},"body":{"injectables/GoogleGaurd.html":{},"coverage.html":{}}}],["src/auth/gaurd/role.gaurd.ts",{"_index":627,"title":{},"body":{"guards/RoleGaurd.html":{},"coverage.html":{}}}],["src/auth/gaurd/role.gaurd.ts:41",{"_index":631,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["src/auth/gaurd/role.gaurd.ts:47",{"_index":634,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["src/auth/refresh",{"_index":611,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/mail/mail.module",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/mail/mail.module.ts",{"_index":443,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/mail/mail.service.ts",{"_index":460,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:11",{"_index":466,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:6",{"_index":464,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/filter/prisma.filter.ts",{"_index":509,"title":{},"body":{"classes/PrismaExceptionFilter.html":{},"coverage.html":{}}}],["src/prisma/filter/prisma.filter.ts:9",{"_index":514,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["src/prisma/prisma.module",{"_index":732,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":546,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":548,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":554,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":555,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/shared/decorator/is",{"_index":399,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"coverage.html":{}}}],["src/shared/dto/param.dto.ts",{"_index":499,"title":{},"body":{"classes/ParamDto.html":{},"coverage.html":{}}}],["src/shared/dto/param.dto.ts:8",{"_index":501,"title":{},"body":{"classes/ParamDto.html":{}}}],["src/shared/dto/query.dto",{"_index":713,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/shared/dto/query.dto.ts",{"_index":560,"title":{},"body":{"classes/QueryDto.html":{},"coverage.html":{}}}],["src/shared/dto/query.dto.ts:11",{"_index":588,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/shared/dto/query.dto.ts:17",{"_index":595,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/shared/dto/query.dto.ts:23",{"_index":593,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/shared/dto/query.dto.ts:28",{"_index":583,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/shared/dto/query.dto.ts:33",{"_index":573,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/shared/dto/query.dto.ts:38",{"_index":570,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/shared/dto/query.dto.ts:42",{"_index":579,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/shared/dto/query.dto.ts:47",{"_index":597,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/shared/dto/validation",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["src/users/dto/create",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":671,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/users/entities/user.entity.ts",{"_index":675,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:10",{"_index":683,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":686,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":685,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:14",{"_index":690,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:18",{"_index":687,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:22",{"_index":689,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:26",{"_index":681,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:30",{"_index":679,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":684,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":682,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/users.controller.ts",{"_index":697,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:17",{"_index":702,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:22",{"_index":705,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:28",{"_index":708,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":730,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/users/users.service.ts",{"_index":734,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:13",{"_index":740,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:22",{"_index":747,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":751,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":753,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:38",{"_index":742,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":744,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:71",{"_index":745,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:77",{"_index":755,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:83",{"_index":748,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":875,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":878,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":879,"title":{},"body":{"index.html":{}}}],["started",{"_index":856,"title":{"index.html":{}},"body":{}}],["starter",{"_index":868,"title":{},"body":{"index.html":{}}}],["statements",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["statuscode",{"_index":526,"title":{},"body":{"classes/PrismaExceptionFilter.html":{},"classes/ValidationErrorDto.html":{}}}],["stay",{"_index":900,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":109,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["string",{"_index":80,"title":{},"body":{"injectables/AccessTokenService.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/Payload.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenService.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{}}}],["sub",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{},"classes/Payload.html":{}}}],["subject",{"_index":476,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":647,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["successfully",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":120,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["support",{"_index":892,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":910,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":522,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["t",{"_index":436,"title":{},"body":{"injectables/IsValidPos.html":{}}}],["table",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":566,"title":{},"body":{"classes/QueryDto.html":{},"injectables/UsersService.html":{}}}],["template",{"_index":473,"title":{},"body":{"injectables/MailService.html":{}}}],["test",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["test:covsupport",{"_index":884,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":883,"title":{},"body":{"index.html":{}}}],["tests",{"_index":881,"title":{},"body":{"index.html":{}}}],["text",{"_index":479,"title":{},"body":{"injectables/MailService.html":{}}}],["thanks",{"_index":890,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":556,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":557,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._date(value",{"_index":428,"title":{},"body":{"injectables/IsGte.html":{}}}],["this._number(value",{"_index":426,"title":{},"body":{"injectables/IsGte.html":{}}}],["this.accesstokenservice.clearcookie(response",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.accesstokenservice.sendcookie(response",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get('salt",{"_index":762,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.configservice.getorthrow('')}?token=${token",{"_index":470,"title":{},"body":{"injectables/MailService.html":{}}}],["this.cookiename",{"_index":85,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["this.cookieoptions",{"_index":92,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["this.hashpassword(data.password",{"_index":773,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign(data",{"_index":98,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["this.jwtservice.verify(data.token",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mailservice.sendmail",{"_index":472,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendverificationmail(data.email",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.prisma.user.create",{"_index":774,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":782,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":778,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":765,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.finduniqueorthrow",{"_index":780,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":781,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.reflector.getallandoverride('role",{"_index":660,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["this.refreshtokenservice.clearcookie(response",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.refreshtokenservice.sendcookie(response",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.salt",{"_index":761,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.sendtoken(response",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.create(body",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.findone(id",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.findone(user.id",{"_index":664,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["this.userservice.validateusercredentail(credentail.email",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.verifyemail(sub",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findall(query",{"_index":721,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":723,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":725,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validatepassword(password",{"_index":766,"title":{},"body":{"injectables/UsersService.html":{}}}],["throttle_limit",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["throttle_ttl",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlerguard",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forrootasync",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":494,"title":{},"body":{"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["token",{"_index":97,"title":{},"body":{"injectables/AccessTokenService.html":{},"controllers/AuthController.html":{},"injectables/MailService.html":{},"injectables/RefreshTokenService.html":{},"classes/VerifyEmailDto.html":{}}}],["token.gaurd",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.gaurd.ts",{"_index":8,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["token.module",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{}}}],["token.module.ts",{"_index":32,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/RefreshTokenModule.html":{}}}],["token.service",{"_index":41,"title":{},"body":{"modules/AccessTokenModule.html":{},"controllers/AuthController.html":{},"modules/RefreshTokenModule.html":{}}}],["token.service.ts",{"_index":53,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{},"coverage.html":{}}}],["token.service.ts:10",{"_index":65,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["token.service.ts:28",{"_index":79,"title":{},"body":{"injectables/AccessTokenService.html":{}}}],["token.service.ts:30",{"_index":619,"title":{},"body":{"injectables/RefreshTokenService.html":{}}}],["token.service.ts:36",{"_index":72,"title":{},"body":{"injectables/AccessTokenService.html":{}}}],["token.service.ts:39",{"_index":618,"title":{},"body":{"injectables/RefreshTokenService.html":{}}}],["token.service.ts:9",{"_index":81,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/RefreshTokenService.html":{}}}],["token.strategy",{"_index":42,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/RefreshTokenModule.html":{}}}],["token.strategy.ts",{"_index":101,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["token.strategy.ts:20",{"_index":622,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:21",{"_index":106,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["token.strategy.ts:9",{"_index":104,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"modules/AccessTokenModule.html":{},"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["token/refresh",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/RefreshTokenGuard.html":{},"modules/RefreshTokenModule.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["touch",{"_index":901,"title":{},"body":{"index.html":{}}}],["transform",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"classes/CredentialLogin.html":{}}}],["transformer",{"_index":384,"title":{},"body":{"classes/CredentialLogin.html":{},"classes/UserEntity.html":{},"dependencies.html":{}}}],["transformoptions",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["transport",{"_index":449,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":94,"title":{},"body":{"injectables/AccessTokenService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"modules/MailModule.html":{},"injectables/RefreshTokenService.html":{},"guards/RoleGaurd.html":{},"injectables/UsersService.html":{}}}],["try",{"_index":471,"title":{},"body":{"injectables/MailService.html":{}}}],["trying",{"_index":528,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["ttl",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":907,"title":{},"body":{"index.html":{}}}],["type",{"_index":68,"title":{},"body":{"injectables/AccessTokenService.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/CredentialLogin.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"injectables/MailService.html":{},"classes/ParamDto.html":{},"classes/Payload.html":{},"classes/PrismaExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDto.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["typeof",{"_index":425,"title":{},"body":{"injectables/IsGte.html":{}}}],["typescript",{"_index":867,"title":{},"body":{"index.html":{}}}],["unable",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"classes/QueryDto.html":{},"classes/UserEntity.html":{}}}],["unique",{"_index":644,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["unit",{"_index":880,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"guards/RoleGaurd.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":918,"title":{},"body":{"properties.html":{}}}],["updateauthdto",{"_index":668,"title":{"classes/UpdateAuthDto.html":{}},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":592,"title":{},"body":{"classes/QueryDto.html":{},"classes/UserEntity.html":{}}}],["updateuserdto",{"_index":670,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["upper",{"_index":373,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["useclass",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["usefactory",{"_index":46,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/RefreshTokenModule.html":{}}}],["useguards",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["useguards(accesstokenguard",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(refreshtokenguard",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"guards/RoleGaurd.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":673,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":346,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:4",{"_index":352,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":356,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":353,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":355,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":354,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":767,"title":{},"body":{"injectables/UsersService.html":{}}}],["user?.role",{"_index":665,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["userentity",{"_index":258,"title":{"classes/UserEntity.html":{}},"body":{"controllers/AuthController.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userentity(user",{"_index":768,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernotfound",{"_index":654,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["users",{"_index":643,"title":{},"body":{"guards/RoleGaurd.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":731,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.map(user",{"_index":779,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":712,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/:id",{"_index":638,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["users/users.module",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":636,"title":{},"body":{"guards/RoleGaurd.html":{}}}],["userscontroller",{"_index":696,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"guards/RoleGaurd.html":{}}}],["usersmodule",{"_index":128,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":275,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"guards/RoleGaurd.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":432,"title":{},"body":{"injectables/IsValidPos.html":{},"coverage.html":{}}}],["valid('development",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":102,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"classes/QueryDto.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(isgte",{"_index":610,"title":{},"body":{"classes/QueryDto.html":{}}}],["validate(payload",{"_index":105,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(value",{"_index":415,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["validatepassword",{"_index":737,"title":{},"body":{"injectables/UsersService.html":{}}}],["validatepassword(password",{"_index":749,"title":{},"body":{"injectables/UsersService.html":{}}}],["validateusercredentail",{"_index":738,"title":{},"body":{"injectables/UsersService.html":{}}}],["validateusercredentail(email",{"_index":752,"title":{},"body":{"injectables/UsersService.html":{}}}],["validationarguments",{"_index":412,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["validationerrordto",{"_index":272,"title":{"classes/ValidationErrorDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationoptions",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["validationpipe",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["validationschema",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":389,"title":{},"body":{"classes/CredentialLogin.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"classes/ParamDto.html":{},"classes/QueryDto.html":{},"classes/VerifyEmailDto.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":417,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["validatorconstraintinterface",{"_index":418,"title":{},"body":{"injectables/IsGte.html":{},"injectables/IsValidPos.html":{}}}],["value",{"_index":390,"title":{},"body":{"classes/CredentialLogin.html":{},"injectables/IsGte.html":{},"injectables/IsValidPos.html":{},"classes/QueryDto.html":{},"miscellaneous/variables.html":{}}}],["value'})@isoptional()@isstring",{"_index":569,"title":{},"body":{"classes/QueryDto.html":{}}}],["value.tolowercase",{"_index":391,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["variable",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":919,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verificationurl",{"_index":469,"title":{},"body":{"injectables/MailService.html":{}}}],["verified",{"_index":676,"title":{},"body":{"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["verify",{"_index":486,"title":{},"body":{"injectables/MailService.html":{}}}],["verify_email_url",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["verifyemail",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["verifyemail(@query",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemail(data",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemail(id",{"_index":754,"title":{},"body":{"injectables/UsersService.html":{}}}],["verifyemaildto",{"_index":261,"title":{"classes/VerifyEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["version",{"_index":916,"title":{},"body":{"properties.html":{}}}],["void",{"_index":75,"title":{},"body":{"injectables/AccessTokenService.html":{},"controllers/AuthController.html":{},"injectables/RefreshTokenService.html":{}}}],["watch",{"_index":876,"title":{},"body":{"index.html":{}}}],["website",{"_index":905,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":480,"title":{},"body":{"injectables/MailService.html":{}}}],["went",{"_index":540,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["whitelist",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["wrong",{"_index":541,"title":{},"body":{"classes/PrismaExceptionFilter.html":{}}}],["you'd",{"_index":895,"title":{},"body":{"index.html":{}}}],["z",{"_index":377,"title":{},"body":{"classes/CredentialLogin.html":{}}}],["zoom",{"_index":29,"title":{},"body":{"modules/AccessTokenModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/RefreshTokenModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessTokenGuard.html":{"url":"injectables/AccessTokenGuard.html","title":"injectable - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-token/access-token.gaurd.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AccessTokenGuard extends AuthGuard('jwt') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessTokenModule.html":{"url":"modules/AccessTokenModule.html","title":"module - AccessTokenModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessTokenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccessTokenModule\n\n\n\ncluster_AccessTokenModule_exports\n\n\n\ncluster_AccessTokenModule_providers\n\n\n\n\nAccessTokenService \n\nAccessTokenService \n\n\n\nAccessTokenModule\n\nAccessTokenModule\n\nAccessTokenService  -->\n\nAccessTokenModule->AccessTokenService \n\n\n\n\n\nAccessTokenService\n\nAccessTokenService\n\nAccessTokenModule -->\n\nAccessTokenService->AccessTokenModule\n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAccessTokenModule -->\n\nAccessTokenStrategy->AccessTokenModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/access-token/access-token.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccessTokenService\n                        \n                        \n                            AccessTokenStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccessTokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AccessTokenService } from './access-token.service';\nimport { AccessTokenStrategy } from './access-token.strategy';\n\n@Module({\n  providers: [\n    AccessTokenStrategy,\n    AccessTokenService\n  ],\n  imports: [\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        secret: config.getOrThrow('ACCESS_TOKEN_SECRET'),\n        signOptions: { \n          expiresIn: config.getOrThrow('ACCESS_TOKEN_EXPIRATION_TIME') \n        },\n      }),\n    }),\n  ],\n  exports: [\n    JwtModule,\n    AccessTokenService\n  ]\n})\nexport class AccessTokenModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenService.html":{"url":"injectables/AccessTokenService.html","title":"injectable - AccessTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-token/access-token.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieName\n                            \n                            \n                                cookieOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearCookie\n                            \n                            \n                                sendCookie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-token/access-token.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearCookie\n                        \n                    \n                \n            \n            \n                \nclearCookie(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/access-token/access-token.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendCookie\n                        \n                    \n                \n            \n            \n                \nsendCookie(res: Response, data: Payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/access-token/access-token.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cookieName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/access-token/access-token.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cookieOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CookieOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/access-token/access-token.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { CookieOptions, Response } from 'express';\nimport { Payload } from '../entities/auth.entity';\n\n@Injectable()\nexport class AccessTokenService {\n    cookieName: string;\n    cookieOptions: CookieOptions;\n\n    constructor(\n        private jwtService: JwtService,\n        configService: ConfigService) {\n\n        this.cookieName = configService.getOrThrow('ACCESS_TOKEN_COOKIE_NAME')\n\n        const domain = configService.getOrThrow('COOKIE_DOMAIN');\n        const maxAge = configService.getOrThrow('ACCESS_TOKEN_EXPIRATION_TIME');\n        this.cookieOptions = {\n            httpOnly: true,\n            path: \"/auth/refresh\",\n            maxAge,\n            domain,\n        }\n    }\n\n    sendCookie(res: Response, data: Payload) {\n        const token = this.jwtService.sign(data);\n        res.cookie(\n            this.cookieName,\n            token,\n            this.cookieOptions)\n    }\n\n    clearCookie(res: Response) {\n        res.clearCookie(this.cookieName, this.cookieOptions);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-token/access-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-token/access-token.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: Payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/access-token/access-token.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Payload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Request } from 'express';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Payload } from '../entities/auth.entity';\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(Strategy, 'jwt') {\n   \n    constructor(configService: ConfigService) {\n        const cookieName = configService.getOrThrow('ACCESS_TOKEN_COOKIE_NAME');\n        const secretOrKey = configService.getOrThrow('ACCESS_TOKEN_SECRET');\n        const jwtFromRequest = ExtractJwt.fromExtractors([\n            (request: Request) => request?.cookies?.[cookieName] || null\n        ]);\n\n        super({ jwtFromRequest, secretOrKey });\n    }\n\n    validate(payload: Payload) {\n        return payload;\n    }\n\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module, ValidationPipe } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport * as Joi from 'joi';\nimport { APP_FILTER, APP_GUARD, APP_INTERCEPTOR, APP_PIPE } from '@nestjs/core';\nimport { PrismaExceptionFilter } from './prisma/filter/prisma.filter';\nimport { MailModule } from './mail/mail.module';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      validationSchema: Joi.object({\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test', 'provision')\n          .default('development'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string().required(),\n        COOKIE_DOMAIN: Joi.string().default('localhost'),\n        GOOGLE_CLIENT_ID: Joi.string().required(),\n        GOOGLE_CLIENT_SECRET: Joi.string().required(),\n        ALLOWED_ORIGIN: Joi.string().default('*'),\n        SALT: Joi.number().default(10),\n\n        ACCESS_TOKEN_SECRET: Joi.string().required(),\n        ACCESS_TOKEN_EXPIRATION_TIME: Joi.string().default(15 * 60), // 15 minutes\n        REFRESH_TOKEN_SECRET: Joi.string().required(),\n        REFRESH_TOKEN_EXPIRATION_TIME: Joi.string().default(7 * 24 * 60 * 60), // 7 days\n        ACCESS_TOKEN_COOKIE_NAME: Joi.string().default('access_token'),\n        REFRESH_TOKEN_COOKIE_NAME: Joi.string().default('refresh_token'),\n\n        SMTP_API_KEY: Joi.string().required(),\n        SMTP_API_HOST: Joi.string().default(\"smtp.sendgrid.net\"),\n        SMTP_API_USER: Joi.string().default(\"apikey\"),\n        SMTP_MAIL_FROM: Joi.string().required(),\n        THROTTLE_TTL: Joi.number().default(60), // 60 seconds \n        THROTTLE_LIMIT: Joi.number().default(100), // 100 requests\n\n\n        VERIFY_EMAIL_URL: Joi.string().default('http://localhost:3000/auth/verify-email'),\n      }),\n      validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n      },\n    }),\n\n    ThrottlerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        ttl: config.getOrThrow('THROTTLE_TTL'),\n        limit: config.getOrThrow('THROTTLE_LIMIT'),\n      }),\n    }),\n    PrismaModule,\n    UsersModule,\n    AuthModule,\n    MailModule,\n  ],\n  controllers: [],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: ClassSerializerInterceptor,\n    }, {\n      provide: APP_FILTER,\n      useClass: PrismaExceptionFilter,\n    }, {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }, {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        transform: true,\n        whitelist: true,\n        forbidNonWhitelisted: true,\n        transformOptions: {\n          enableImplicitConversion: true,\n        },\n      }),\n    },\n\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                credentailLogin\n                            \n                            \n                                    Async\n                                credentailSignUp\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                me\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                sendToken\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        credentailLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    credentailLogin(response: Response, credentail: CredentialLogin)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    credentail\n                                    \n                                                CredentialLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        credentailSignUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    credentailSignUp(body: CredentialLogin)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')@ApiConflictResponse({description: 'Unable to create user'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CredentialLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')@UseGuards(AccessTokenGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(id: number, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('refresh')@ApiCookieAuth()@UseGuards(RefreshTokenGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendToken\n                        \n                    \n                \n            \n            \n                \nsendToken(response: Response, undefined: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmail(data: VerifyEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('verify-email')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VerifyEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Res, UseGuards, Query } from '@nestjs/common';\nimport { ApiBadRequestResponse, ApiConflictResponse, ApiCookieAuth, ApiTags } from '@nestjs/swagger';\nimport { ValidationErrorDto } from 'src/shared/dto/validation-error.dto';\nimport { UsersService } from 'src/users/users.service';\nimport { CredentialLogin } from './dto/credential-login.dto';\nimport { Response } from 'express';\nimport { MailService } from 'src/mail/mail.service';\nimport { AccessTokenService } from './access-token/access-token.service';\nimport { RefreshTokenService } from './refresh-token/refresh-token.service';\nimport { Payload } from './entities/auth.entity';\nimport { AuthUser } from './decorator/auth.gaurd';\nimport { RefreshTokenGuard } from './refresh-token/refresh-token.gaurd';\nimport { AccessTokenGuard } from './access-token/access-token.gaurd';\nimport { UserEntity } from 'src/users/entities/user.entity';\nimport { JwtService } from '@nestjs/jwt';\nimport { VerifyEmailDto } from './dto/verify-emaill.dto';\n\n\n@Controller('auth')\n@ApiTags('auth')\n@ApiBadRequestResponse({ description: 'Bad request', type: ValidationErrorDto })\nexport class AuthController {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly userService: UsersService,\n    private readonly mailService: MailService,\n    private readonly accessTokenService: AccessTokenService,\n    private readonly refreshTokenService: RefreshTokenService) { }\n\n\n  @Post(\"login\")\n  async credentailLogin(\n    @Res({ passthrough: true }) response: Response,\n    @Body() credentail: CredentialLogin) {\n    const user = await this.userService.validateUserCredentail(credentail.email, credentail.password);\n    this.sendToken(response, user);\n    return user;\n  }\n\n\n  @Post(\"signup\")\n  @ApiConflictResponse({ description: 'Unable to create user' })\n  async credentailSignUp(@Body() body: CredentialLogin) {\n    const data = await this.userService.create(body);\n    const token = this.jwtService.sign({ sub: data.id, email: data.email, role: data.role });\n    this.mailService.sendVerificationMail(data.email, token);\n    return {\n      message: \"User created successfully\"\n    };\n  }\n\n  @Get('verify-email')\n  async verifyEmail(@Query() data: VerifyEmailDto) {\n    const { sub } = this.jwtService.verify(data.token);\n    await this.userService.verifyEmail(sub);\n\n\n  }\n\n  @Post(\"logout\")\n  async logout(@Res({ passthrough: true }) response: Response) {\n    this.refreshTokenService.clearCookie(response)\n    this.accessTokenService.clearCookie(response);\n  }\n\n  @Get('refresh')\n  @ApiCookieAuth()\n  @UseGuards(RefreshTokenGuard)\n  async refresh(@AuthUser() id: number, @Res({ passthrough: true }) response: Response) {\n    const user = await this.userService.findOne(id);\n    this.sendToken(response, user);\n    return user;\n  }\n\n\n  @Get('me')\n  @UseGuards(AccessTokenGuard)\n  me(@AuthUser() id: number) {\n    return this.userService.findOne(id);\n  }\n\n  sendToken(\n    response: Response,\n    { email, id: sub, role }: UserEntity) {\n    const token: Payload = { email, sub, role };\n    this.accessTokenService.sendCookie(response, token);\n    this.refreshTokenService.sendCookie(response, token);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAccessTokenModule\n\nAccessTokenModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAccessTokenModule->AuthModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\n\n\nRefreshTokenModule\n\nRefreshTokenModule\n\nAuthModule -->\n\nRefreshTokenModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccessTokenModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            RefreshTokenModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from '../users/users.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { PassportModule } from '@nestjs/passport';\nimport { MailModule } from 'src/mail/mail.module';\nimport { RefreshTokenModule } from './refresh-token/refresh-token.module';\nimport { AccessTokenModule } from './access-token/access-token.module';\n\n@Module({\n  controllers: [AuthController],\n  imports: [\n    UsersModule,\n    ConfigModule,\n    MailModule,\n    AccessTokenModule,\n    RefreshTokenModule,  \n\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: true\n    }),\n  ],\n  exports: [PassportModule]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                image\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prisma } from \"@prisma/client\";\n\nexport class CreateUserDto implements Prisma.UserCreateInput {\n    email: string;\n    password?: string;\n    firstName?: string;\n    lastName?: string;\n    image?: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CredentialLogin.html":{"url":"classes/CredentialLogin.html","title":"class - CredentialLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CredentialLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/credential-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/credential-login.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({minLength: 8, example: 'Password@123', description: 'password must contain atleast 1 special character, 1 upper case and 1 number'})@IsString()@MinLength(8)@Matches(/[@$!%*#?&]/, {message: 'password contain atleast 1 special character'})@Matches(/[A-Z]/, {message: 'password must contain atleast 1 upper case'})@Matches(/[a-z]/, {message: 'password must contain atleast 1 lower case'})@Matches(/[0-9]/, {message: 'password must contain atleast 1 number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/credential-login.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Transform } from \"class-transformer\";\nimport { IsEmail, IsString, Matches, MinLength } from \"class-validator\";\n\nexport class CredentialLogin {\n    @IsEmail()\n    @Transform(({ value }) => value.toLowerCase())\n    email: string;\n\n    @ApiProperty({\n        minLength: 8,\n        example: 'Password@123',\n        description: 'password must contain atleast 1 special character, 1 upper case and 1 number',\n    })\n    @IsString()\n    @MinLength(8)\n    @Matches(/[@$!%*#?&]/,{ message: 'password contain atleast 1 special character' })\n    @Matches(/[A-Z]/, { message: 'password must contain atleast 1 upper case' })\n    @Matches(/[a-z]/, { message: 'password must contain atleast 1 lower case' })\n    @Matches(/[0-9]/, { message: 'password must contain atleast 1 number' })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleGaurd.html":{"url":"injectables/GoogleGaurd.html","title":"injectable - GoogleGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/gaurd/google.gaurd.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class GoogleGaurd extends AuthGuard(\"google\") {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsGte.html":{"url":"injectables/IsGte.html","title":"injectable - IsGte","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsGte\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/decorator/is-gte.decorator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _date\n                            \n                            \n                                    Private\n                                _number\n                            \n                            \n                                defaultMessage\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _date\n                        \n                    \n                \n            \n            \n                \n                    \n                    _date(value: Date, relatedValue: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/decorator/is-gte.decorator.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    relatedValue\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _number\n                        \n                    \n                \n            \n            \n                \n                    \n                    _number(value: number, relatedValue: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/decorator/is-gte.decorator.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    relatedValue\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/decorator/is-gte.decorator.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: any, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/decorator/is-gte.decorator.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ValidationArguments, ValidatorConstraint, ValidatorConstraintInterface } from \"class-validator\";\n\n@Injectable()\n@ValidatorConstraint({ name: 'IsGreaterThanEqual', async: false})\nexport class IsGte implements ValidatorConstraintInterface {\n \n    async validate(value: any, args: ValidationArguments) {\n        const [relatedPropertyName] = args.constraints;\n        const relatedValue = (args.object as any)[relatedPropertyName];\n        if (typeof value === 'number' && typeof relatedValue === 'number') {\n            return this._number(value, relatedValue);\n        }\n        else if (value instanceof Date && relatedValue instanceof Date) {\n            return this._date(value, relatedValue);\n        } else {\n            return true;\n        }\n    }\n\n\n    private _number(value: number, relatedValue: number) {\n        return value >= relatedValue;\n    }\n\n    private _date(value: Date, relatedValue: Date) {\n        return value >= relatedValue;\n    }\n\n    defaultMessage(args: ValidationArguments) {\n        const [relatedPropertyName] = args.constraints;\n        return `${relatedPropertyName} must be greater than ${args.property}`;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsValidPos.html":{"url":"injectables/IsValidPos.html","title":"injectable - IsValidPos","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsValidPos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/decorator/is-valid-pos.decorator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/decorator/is-valid-pos.decorator.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: number, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/decorator/is-valid-pos.decorator.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ValidationArguments, ValidatorConstraint, ValidatorConstraintInterface } from \"class-validator\";\n\n@Injectable()\n@ValidatorConstraint({ name: 'IsGreaterThanEqual', async: false})\nexport class IsValidPos implements ValidatorConstraintInterface {\n \n    async validate(value: number, args: ValidationArguments) {\n        const [relatedPropertyName] = args.constraints;\n        const relatedValue = (args.object as any)[relatedPropertyName] as T[];\n        if (value >= relatedValue.length) {\n            return false;\n        }\n        return true;\n    }\n\n\n    defaultMessage(args: ValidationArguments) {\n        const [relatedPropertyName] = args.constraints;\n        return `${args.property} must not exceed size of ${relatedPropertyName}`;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MailerModule } from '@nestjs-modules/mailer';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  imports:[\n    ConfigModule,\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        transport:{\n          host: config.getOrThrow('SMTP_API_HOST'),\n          port: 465,\n          secure: true,\n          auth: {\n            user: config.getOrThrow('SMTP_API_USER'),\n            pass: config.getOrThrow('SMTP_API_KEY'),\n          },\n        },\n        defaults: {\n          from: `No Reply ${config.getOrThrow('SMTP_MAIL_FROM')}>`,\n        },\n      })\n    })\n  ],\n  exports: [\n    MailService\n  ]\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendVerificationMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendVerificationMail\n                        \n                    \n                \n            \n            \n                \nsendVerificationMail(to: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class MailService {\n    constructor(\n        private mailService: MailerService,\n        private configService: ConfigService) { }\n\n    sendVerificationMail(to: string, token: string) {\n        const verificationUrl = `${this.configService.getOrThrow('')}?token=${token}`;\n        try {\n            return this.mailService.sendMail({\n                to,\n                template: './confirmation-mail',\n                subject: 'Please confirm your email',\n                text: \"Welcome to my app\",\n                html: `\n                    Welcome to my app\n\n                    Click on the link below to verify your email\n                    \n                        Verify Email\n                    \n\n                    Or copy and paste the link below into your browser\n\n\n                    \n                        If you did not create an account, please ignore this email.\n                    \n                `,\n\n\n            })\n        } catch (error) {\n            throw new HttpException(\"Unable to send email\", HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n    }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParamDto.html":{"url":"classes/ParamDto.html","title":"class - ParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/param.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber, Min } from \"class-validator\";\n\nexport class ParamDto {\n    @ApiProperty()\n    @IsNumber()\n    @Min(1)\n    id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Payload.html":{"url":"classes/Payload.html","title":"class - Payload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                role\n                            \n                            \n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth.entity.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"@prisma/client\";\n\nexport class Payload {\n    sub: number;\n    email: string;\n    role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaExceptionFilter.html":{"url":"classes/PrismaExceptionFilter.html","title":"class - PrismaExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/filter/prisma.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: PrismaClientKnownRequestError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/filter/prisma.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            PrismaClientKnownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from \"@nestjs/common\";\nimport { PrismaClientKnownRequestError } from \"@prisma/client/runtime\";\nimport { Request, Response } from \"express\";\n\n\n@Catch(PrismaClientKnownRequestError)\nexport class PrismaExceptionFilter implements ExceptionFilter {\n\n    catch(exception: PrismaClientKnownRequestError, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        switch (exception.code) {\n            case 'P2002':\n                return response.status(HttpStatus.CONFLICT).json({\n                    statusCode: HttpStatus.CONFLICT,\n                    message: \"The data you are trying to create already exists\",\n                })\n            case 'P2025':\n                return response.status(HttpStatus.NOT_FOUND).json({\n                    statusCode: HttpStatus.NOT_FOUND,\n                    message: `The data you are trying to ${request.method.toLowerCase()} does not exist`,\n                })\n            default:\n                return response.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n                    statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n                    message: \"Oops! Something went wrong\",\n                })\n            }\n        }\n    }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n    providers: [PrismaService],\n    exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryDto.html":{"url":"classes/QueryDto.html","title":"class - QueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                contains\n                            \n                            \n                                    Optional\n                                field\n                            \n                            \n                                from\n                            \n                            \n                                order\n                            \n                            \n                                skip\n                            \n                            \n                                sort\n                            \n                            \n                                take\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        contains\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Filter by this value'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/query.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'id'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({default: 'id', description: 'Filter by this field'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/query.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({format: '2021-01-01T11:59:59.999Z', description: 'Filter by this date'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/query.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.SortOrder\n\n                    \n                \n                \n                    \n                        Default value : Prisma.SortOrder.asc\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({default: undefined, description: 'Sort direction'})@IsOptional()@IsEnum(Prisma.SortOrder)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/query.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({default: 0, description: 'Skip the first n results'})@IsOptional()@IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/query.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'id'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({default: 'id', description: 'Sort by this field'})@IsOptional()@IsString()@IsIn(['id', 'question', 'createdAt', 'updatedAt'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/query.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({default: 100, description: 'Limit the number of results'})@IsOptional()@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/query.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({format: '2021-01-01T11:59:59.999Z', description: 'Filter by this date'})@IsOptional()@Validate(IsGte, ['from'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/query.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Prisma } from \"@prisma/client\";\nimport { IsEnum, IsIn, IsInt, IsOptional, IsString, Min, Validate } from \"class-validator\";\nimport { IsGte } from \"../decorator/is-gte.decorator\";\n\nexport class QueryDto {\n    @ApiPropertyOptional({ default: 0, description: 'Skip the first n results' })\n    @IsOptional()\n    @IsInt()\n    @Min(0)\n    skip: number = 0;\n\n    @ApiPropertyOptional({ default: 100, description: 'Limit the number of results' })\n    @IsOptional()\n    @IsInt()\n    @Min(1)\n    take: number = 100;\n\n    @ApiPropertyOptional({ default: 'id', description: 'Sort by this field' })\n    @IsOptional()\n    @IsString()\n    @IsIn(['id', 'question', 'createdAt', 'updatedAt'])\n    sort: string = 'id';\n\n    @ApiPropertyOptional({ default: Prisma.SortOrder.asc, description: 'Sort direction' })\n    @IsOptional()\n    @IsEnum(Prisma.SortOrder)\n    order: Prisma.SortOrder = Prisma.SortOrder.asc ;\n\n    @ApiPropertyOptional({ default: 'id', description: 'Filter by this field' })\n    @IsOptional()\n    @IsString()\n    field?: string = 'id';\n\n    @ApiPropertyOptional({description: 'Filter by this value' })\n    @IsOptional()\n    @IsString()\n    contains?: string;\n\n    @ApiPropertyOptional({format: '2021-01-01T11:59:59.999Z', description: 'Filter by this date' })\n    @IsOptional()\n    from: Date;\n\n    @ApiPropertyOptional({ format: '2021-01-01T11:59:59.999Z', description: 'Filter by this date' })\n    @IsOptional()\n    @Validate(IsGte, ['from'])\n    to: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenGuard.html":{"url":"injectables/RefreshTokenGuard.html","title":"injectable - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/refresh-token/refresh-token.gaurd.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class RefreshTokenGuard extends AuthGuard('jwt-refresh') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RefreshTokenModule.html":{"url":"modules/RefreshTokenModule.html","title":"module - RefreshTokenModule","body":"\n                   \n\n\n\n\n    Modules\n    RefreshTokenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RefreshTokenModule\n\n\n\ncluster_RefreshTokenModule_exports\n\n\n\ncluster_RefreshTokenModule_providers\n\n\n\n\nRefreshTokenService \n\nRefreshTokenService \n\n\n\nRefreshTokenModule\n\nRefreshTokenModule\n\nRefreshTokenService  -->\n\nRefreshTokenModule->RefreshTokenService \n\n\n\n\n\nRefreshTokenService\n\nRefreshTokenService\n\nRefreshTokenModule -->\n\nRefreshTokenService->RefreshTokenModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nRefreshTokenModule -->\n\nRefreshTokenStrategy->RefreshTokenModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/refresh-token/refresh-token.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RefreshTokenService\n                        \n                        \n                            RefreshTokenStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RefreshTokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RefreshTokenService } from './refresh-token.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { RefreshTokenStrategy } from './refresh-token.strategy';\n\n@Module({\n  providers: [\n    RefreshTokenStrategy,\n    RefreshTokenService\n  ],\n  imports: [\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        secret: config.getOrThrow('REFRESH_TOKEN_SECRET'),\n        signOptions: { \n          expiresIn: config.getOrThrow('REFRESH_TOKEN_EXPIRATION_TIME') \n        },\n      }),\n    }),\n  ],\n  exports: [\n    RefreshTokenService\n  ]\n})\nexport class RefreshTokenModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenService.html":{"url":"injectables/RefreshTokenService.html","title":"injectable - RefreshTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/refresh-token/refresh-token.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieName\n                            \n                            \n                                cookieOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearCookie\n                            \n                            \n                                sendCookie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/refresh-token/refresh-token.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearCookie\n                        \n                    \n                \n            \n            \n                \nclearCookie(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/refresh-token/refresh-token.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendCookie\n                        \n                    \n                \n            \n            \n                \nsendCookie(res: Response, data: Payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/refresh-token/refresh-token.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cookieName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/refresh-token/refresh-token.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cookieOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CookieOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/refresh-token/refresh-token.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { CookieOptions, Response } from 'express';\nimport { Payload } from '../entities/auth.entity';\n\n@Injectable()\nexport class RefreshTokenService {\n    cookieName: string;\n    cookieOptions: CookieOptions;\n\n    constructor(\n        private jwtService: JwtService,\n        configService: ConfigService) {\n\n        this.cookieName = configService.getOrThrow('REFRESH_TOKEN_COOKIE_NAME')\n\n        const domain = configService.getOrThrow('COOKIE_DOMAIN');\n        const maxAge = configService.getOrThrow('REFRESH_TOKEN_EXPIRATION_TIME');\n        this.cookieOptions = {\n            httpOnly: true,\n            path: \"/auth/refresh\",\n            maxAge,\n            domain,\n        }\n    }\n\n\n\n    sendCookie(res: Response, data: Payload) {\n        const token = this.jwtService.sign(data);\n        res.cookie(\n            this.cookieName,\n            token,\n            this.cookieOptions)\n    }\n\n\n    clearCookie(res: Response) {\n        res.clearCookie(this.cookieName, this.cookieOptions);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenStrategy.html":{"url":"injectables/RefreshTokenStrategy.html","title":"injectable - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/refresh-token/refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/refresh-token/refresh-token.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: Payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/refresh-token/refresh-token.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Payload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Request } from 'express';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Payload } from '../entities/auth.entity';\n\n@Injectable()\nexport class RefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh') {\n  \n    constructor(configService: ConfigService) {\n        const cookieName = configService.getOrThrow('REFRESH_TOKEN_COOKIE_NAME');\n        const secretOrKey = configService.getOrThrow('REFRESH_TOKEN_SECRET');\n        const jwtFromRequest = ExtractJwt.fromExtractors([\n            (request: Request) => request?.cookies?.[cookieName] || null\n        ]);\n        super({ jwtFromRequest, secretOrKey });\n    }\n\n    validate(payload: Payload) {\n        return payload;\n    }\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGaurd.html":{"url":"guards/RoleGaurd.html","title":"guard - RoleGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/gaurd/role.gaurd.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/gaurd/role.gaurd.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/gaurd/role.gaurd.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Role } from '@prisma/client';\nimport { UsersService } from '../../users/users.service';\n/**\n * @api {get} /users/:id Get User\n * @apiName GetUser\n * @apiGroup User\n *\n * @apiParam {Number} id Users unique ID.\n *\n * @apiSuccess {String} firstname Firstname of the User.\n * @apiSuccess {String} lastname  Lastname of the User.\n *\n * @apiSuccessExample Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"firstname\": \"John\",\n *       \"lastname\": \"Doe\"\n *     }\n *\n * @apiError UserNotFound The id of the User was not found.\n *\n * @apiErrorExample Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *       \"error\": \"UserNotFound\"\n *     }\n */\n\n/**\n * @api {post} /users/ Create User\n * @apiName CreateUser\n * @apiGroup User\n *\n * @apiParam {String} firstname Firstname of the User.\n * @apiParam {String} lastname  Lastname of the User.\n *\n */\n@Injectable()\nexport class RoleGaurd implements CanActivate {\n    constructor(\n        private reflector: Reflector,\n        private userService: UsersService\n        ) { }\n\n    async canActivate(context: ExecutionContext) {\n        const requiredRole = this.reflector.getAllAndOverride('role', [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (!requiredRole)\n            return true;\n        const { user } = context.switchToHttp().getRequest();\n        if (!user)\n            return false;\n        const data = await this.userService.findOne(user.id);\n        return (data.role === requiredRole ||  user?.role === requiredRole);\n    }\n}\n\n\n// how to create comment for composedoc\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/oauth-login.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateAuthDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                            \n                                verified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/users/entities/user.entity.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Role, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from \"@nestjs/swagger\";\nimport { Prisma, Role, User } from \"@prisma/client\"\nimport { Exclude } from \"class-transformer\";\n\n\nexport class UserEntity implements User {\n    id: number;\n    email: string;\n\n    firstName: string | null;\n    lastName: string | null;\n    image: string | null;\n\n    verified: boolean;\n\n    @ApiHideProperty()\n    @Exclude()\n    password: string | null;\n\n\n    @ApiProperty({ enum: Role, default: Role.USER })\n    role: Role;\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: Date;\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: Date;\n\n\n    constructor(partial: Partial) {\n        Object.assign(this, partial);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(query: QueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                QueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { ApiCookieAuth, ApiTags } from '@nestjs/swagger';\nimport { QueryDto } from 'src/shared/dto/query.dto';\nimport { IsRole } from 'src/auth/decorator/role.gaurd';\nimport { Role } from '@prisma/client';\n\n@Controller('users')\n@ApiTags('users')\n// @IsRole(Role.ADMIN)\n// @ApiCookieAuth()\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n\n  @Get()\n  findAll(@Query() query: QueryDto) {\n    return this.usersService.findAll(query);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_GUARD } from '@nestjs/core';\nimport { RoleGaurd } from '../auth/gaurd/role.gaurd';\n\n@Module({\n  controllers: [UsersController],\n  providers: [\n    UsersService,\n  {\n    provide: APP_GUARD,\n    useClass: RoleGaurd,\n  }],\n  imports: [PrismaModule, ConfigModule],\n  exports: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                salt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                hashPassword\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                validatePassword\n                            \n                            \n                                    Async\n                                validateUserCredentail\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(undefined: QueryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                QueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        validatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePassword(password: string, hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUserCredentail\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserCredentail(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmail(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, UseGuards } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UserEntity } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { Role } from '@prisma/client';\nimport { QueryDto } from 'src/shared/dto/query.dto';\nimport { IsRole } from '../auth/decorator/role.gaurd';\n\n@Injectable()\nexport class UsersService {\n  salt!: number;\n\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly config: ConfigService) {\n    this.salt = this.config.get('SALT');\n  }\n\n\n  private hashPassword(password: string) {\n    return bcrypt.hash(password, this.salt);\n  }\n\n  public validatePassword(password: string, hash: string) {\n    return bcrypt.compare(password, hash);\n  }\n\n  async validateUserCredentail(email: string, password: string) {\n    const user = await this.prisma.user.findUnique({ where: { email } });\n    if (user && await this.validatePassword(password, user.password)) {\n      return new UserEntity(user);\n    }\n    throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n  }\n\n  async create(data: CreateUserDto) {\n    data.password = await this.hashPassword(data.password);\n    const user = await this.prisma.user.create({ data });\n    return new UserEntity(user);\n  }\n\n  async findAll({\n    skip,\n    take,\n    from: gte,\n    to: lte,\n    field,\n    contains,\n    sort,\n    order,\n  }: QueryDto\n  ) {\n    const where = {\n      [field]: { contains },\n      createdAt: { gte, lte },\n    };\n\n    const orderBy = { [sort]: order };\n\n    const users = await this.prisma.user.findMany({\n      skip,\n      take,\n      where,\n      orderBy,\n    })\n    return users.map(user => new UserEntity(user));\n  }\n\n  async findOne(id: number) {\n    const user = await this.prisma.user.findUniqueOrThrow({ where: { id } });\n    return new UserEntity(user);\n  }\n\n\n  async verifyEmail(id: number) {\n    const user = await this.prisma.user.update({ where: { id }, data: { verified: true } });\n    return new UserEntity(user);\n  }\n\n\n  async remove(id: number) {\n    const user = await this.prisma.user.delete({ where: { id } });\n    return new UserEntity(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDto.html":{"url":"classes/ValidationErrorDto.html","title":"class - ValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/validation-error.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/validation-error.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/validation-error.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/validation-error.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDto {\n    statusCode: number;\n    message: string[];\n    error: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyEmailDto.html":{"url":"classes/VerifyEmailDto.html","title":"class - VerifyEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/verify-emaill.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/verify-emaill.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString } from \"class-validator\";\n\nexport class VerifyEmailDto {\n    @IsString()\n    token: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/access-token/access-token.gaurd.ts\n            \n            injectable\n            AccessTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/access-token/access-token.service.ts\n            \n            injectable\n            AccessTokenService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/access-token/access-token.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/decorator/auth.gaurd.ts\n            \n            variable\n            AuthUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/role.gaurd.ts\n            \n            variable\n            IsRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/credential-login.dto.ts\n            \n            class\n            CredentialLogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/oauth-login.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/verify-emaill.dto.ts\n            \n            class\n            VerifyEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Payload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/gaurd/google.gaurd.ts\n            \n            injectable\n            GoogleGaurd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/gaurd/role.gaurd.ts\n            \n            guard\n            RoleGaurd\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/refresh-token/refresh-token.gaurd.ts\n            \n            injectable\n            RefreshTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/refresh-token/refresh-token.service.ts\n            \n            injectable\n            RefreshTokenService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/refresh-token/refresh-token.strategy.ts\n            \n            injectable\n            RefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/filter/prisma.filter.ts\n            \n            class\n            PrismaExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/decorator/is-gte.decorator.ts\n            \n            injectable\n            IsGte\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/decorator/is-valid-pos.decorator.ts\n            \n            injectable\n            IsValidPos\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dto/param.dto.ts\n            \n            class\n            ParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/dto/query.dto.ts\n            \n            class\n            QueryDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/shared/dto/validation-error.dto.ts\n            \n            class\n            ValidationErrorDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.8.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.1\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.1.4\n        \n            @nestjs/throttler : ^3.1.0\n        \n            @prisma/client : ^4.8.1\n        \n            bcrypt : ^5.1.0\n        \n            cache-manager : ^5.1.4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            handlebars : ^4.7.7\n        \n            joi : ^17.7.0\n        \n            nodemailer : ^6.9.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            prisma-dbml-generator : ^0.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccessTokenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RefreshTokenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccessTokenModule\n\n\n\ncluster_AccessTokenModule_exports\n\n\n\ncluster_AccessTokenModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_RefreshTokenModule\n\n\n\ncluster_RefreshTokenModule_exports\n\n\n\ncluster_RefreshTokenModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAccessTokenService \n\nAccessTokenService \n\n\n\nAccessTokenModule\n\nAccessTokenModule\n\nAccessTokenService  -->\n\nAccessTokenModule->AccessTokenService \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAccessTokenModule->AuthModule\n\n\n\n\n\nAccessTokenService\n\nAccessTokenService\n\nAccessTokenModule -->\n\nAccessTokenService->AccessTokenModule\n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAccessTokenModule -->\n\nAccessTokenStrategy->AccessTokenModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nRefreshTokenModule\n\nRefreshTokenModule\n\nAuthModule -->\n\nRefreshTokenModule->AuthModule\n\n\n\n\n\nRefreshTokenService \n\nRefreshTokenService \n\nRefreshTokenService  -->\n\nRefreshTokenModule->RefreshTokenService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nRefreshTokenService\n\nRefreshTokenService\n\nRefreshTokenModule -->\n\nRefreshTokenService->RefreshTokenModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nRefreshTokenModule -->\n\nRefreshTokenStrategy->RefreshTokenModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthUser   (src/.../auth.gaurd.ts)\n                        \n                        \n                            IsRole   (src/.../role.gaurd.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorator/auth.gaurd.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user.sub;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/role.gaurd.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (role: Role) => SetMetadata('role', role)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
